<?xml version="1.0" encoding="UTF-8"?>
<cwn>
	<cwn_head>
		<cwn_date>2009.02.17</cwn_date>
		<cwn_prev>2009.02.10</cwn_prev>
		<cwn_next>2009.02.24</cwn_next>
		<cwn_date_text>February 10 to 17, 2009</cwn_date_text>
	</cwn_head>
	<cwn_body>
		<cwn_entry>
			<cwn_title>XML data binder for Ocaml</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/c26df9a185e9afe8#</cwn_url>
			<cwn_who>O'Leary, John W asked and Sylvain Le Gall answered</cwn_who>
			<cwn_what>
&gt; Hi all, 

&gt; I'm looking for a tool that will take an XML data schema (.xsd) and 
&gt; generate data bindings in Ocaml. In other words, I am seeking an Ocaml 
&gt; equivalent to XSD (for C and C++) and JAXB (for Java). 

&gt; Googling didn't immediately turn up anything meeting the above 
&gt; description. I'd very much appreciate any pointers. 

I think you can try taking a look at two project: 
http://www.galaxquery.org/ 
http://www.cduce.org/ocaml 

I think they implement something close to what you want (I mean "close", 
not "what you want" unfortunately). At least there is some code in it, 
that deal with xsd.
			</cwn_what>
			<cwn_who>Richard Jones also replied</cwn_who>
			<cwn_what>
XSD as in the crazy-complicated quasi-standard used in SOAP, WSDL etc? 
I'm not sure you'll find any implementations in OCaml - it's hard 
enough to implement when you have a large team of people available to 
you. 

I did a very very partial implementation using CDuce as part of my 
SOAP client code for the Google AdWords API.  It's not directly 
usable, but maybe you can have a look at it for inspiration anyway: 

  http://merjis.com/developers/oc-soap
			</cwn_what>
		</cwn_entry>
		<cwn_entry>
			<cwn_title>findlib-1.2.4 (for ocaml-3.11)</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/8273ad37caf6aa97#</cwn_url>
			<cwn_who>Gerd Stolpmann announced</cwn_who>
			<cwn_what>
I've just uploaded findlib-1.2.4. This is a bugfix release:

     * For ocaml-3.11 some camlp4 libs no longer include dynlink.
       Findlib has a fixed META definition.
     * Bigarray needs unix: This has been fixed in the META file, too.
     * Attempt to fix some "space path" issues for Win32. It is
       untested, however.

Get findlib from its homepage
(&lt;http://projects.camlcity.org/projects/findlib.html&gt;). The GODI package
is already updated.
			</cwn_what>
		</cwn_entry>
	</cwn_body>
</cwn>