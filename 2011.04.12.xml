<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2011.04.12</cwn_date>
    <cwn_prev>2011.04.05</cwn_prev>
    <cwn_next>2011.04.19</cwn_next>
    <cwn_date_text>April 05 to 12, 2011</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>mcmc-ocaml: A Library for Markov-Chain Monte Carlo Computations in OCaml</cwn_title>
      <cwn_url>https://sympa-roc.inria.fr/wws/arc/caml-list/2011-04/msg00028.html</cwn_url>
      <cwn_who>Will M Farr announced</cwn_who>
      <cwn_what>
I'd like to announce mcmc-ocaml, a library for Markov-chain Monte
Carlo computations in OCaml. You can obtain the library from github at

https://github.com/farr/mcmc-ocaml

It is released under the GPL, version 3.0. For more information on
MCMC, see http://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo .

Some highlights of the mcmc-ocaml library:

* mcmc-ocaml provides code to perform MCMC analysis in arbitrary
parameter spaces. Parameter values need not be numerical, but can
instead be any OCaml value: algebraic data types, classes, etc.

* mcmc-ocaml provides useful higher-order functions to combine
multiple jump proposals with arbitrary weights into a single proposal
for Metropolis-Hastings sampling, making it easy to have many special
jump proposals tuned to your specific parameter space structure.

* mcmc-ocaml provides code to read and write MCMC samples from/to
files; this can be combined with the library of statistical functions
or user-written code to perform post-processing of MCMC output either
in a stand-alone program or from the REPL.

* mcmc-ocaml provides many utility functions for performing model
selection via Reversible-Jump MCMC, either between two models or among
a larger set of models. This includes an implementation of the method
described in http://arxiv.org/abs/1104.0984 for facilitating
inter-model jumps by interpolating posteriors using single model
parameter samples.

* mcmc-ocaml provides several different algorithms for computing the
Bayesian evidence for a model using MCMC samples from its posterior
distribution, including the "direct integration" algorithms described
in http://arxiv.org/abs/0911.1777 .

* mcmc-ocaml comes with complete ocamldoc documentation for its
functions and types.

mcmc-ocaml is extensively tested, and has been used to constrain the
mass distribution of stellar-mass black holes in our galaxy
(http://arxiv.org/abs/1011.1459 ---including the 10-way RJMCMC
comparisons among the models in that paper), among other research
projects. Please direct bug reports, feature requests, and comments to
this address (w-farr AT northwestern.edu).
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>OCaml/Xen google summer of code</cwn_title>
      <cwn_url>https://sympa-roc.inria.fr/wws/arc/caml-list/2011-04/msg00036.html</cwn_url>
      <cwn_who>Anil Madhavapeddy announced</cwn_who>
      <cwn_what>
Xen.org was accepted to the Google Summer of Code 2011, and I snuck in an 
OCaml-related project [1]. I haven't received any good applications for this, 
so if you are interested and eligible, I would encourage you to apply before 
the deadline tomorrow.  Please get in touch with me asap by email if you do 
plan to put a proposal in.

The SSL idea is just a template; pretty much anything interesting (especially 
profiling-related) to running OCaml "stub domains" on Xen would be relevant.

cheers
Anil

[1] http://wiki.xensource.com/xenwiki/GSoC_2011_ideas
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other Caml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Thanks to Alp Mestan, we now include in the Caml Weekly News the links to the
recent posts from the ocamlcore planet blog at &lt;http://planet.ocamlcore.org/&gt;.

OCaml Bitcask:
  &lt;https://forge.ocamlcore.org/projects/bitcask/&gt;

OCaml is smarter than I thought:
  &lt;http://ocaml.janestcapital.com/?q=node/90&gt;

Sebib 1.1.0 released:
  &lt;https://forge.ocamlcore.org/forum/forum.php?forum_id=785&gt;

SPL: Shakespeare Programming Language:
  &lt;https://forge.ocamlcore.org/projects/shakespeare/&gt;

performances tweaking - dose3:
  &lt;https://mancoosi.org/~abate/performances-tweaking-dose3&gt;

What does this function do?:
  &lt;http://www.lexifi.com/blog/what-does-function-do&gt;

OCaml Meeting 2011, last day of registration:
  &lt;https://forge.ocamlcore.org/forum/forum.php?forum_id=784&gt;

Logic programming in Scala, part 1:
  &lt;http://ambassadortothecomputers.blogspot.com/2011/04/logic-programming-in-scala-part-1.html&gt;

OCamlPro and the future of OCaml:
  &lt;http://ocaml.janestcapital.com/?q=node/89&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>