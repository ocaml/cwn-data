<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2012.01.17</cwn_date>
    <cwn_prev>2012.01.10</cwn_prev>
    <cwn_next>2012.01.24</cwn_next>
    <cwn_date_text>January 10 to 17, 2012</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>References and polymorphism</cwn_title>
      <cwn_url>https://sympa-roc.inria.fr/wws/arc/caml-list/2012-01/msg00089.html</cwn_url>
      <cwn_who>Deep in this thread, Gabriel Scherer said</cwn_who>
      <cwn_what>
For a description of how the value restriction is relaxed in the OCaml
type system, see the article
  "Relaxing the value restriction", by Jacques Garrigue, 2004
  http://caml.inria.fr/about/papers.en.html
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>The OCaml hump and RDF</cwn_title>
      <cwn_url>https://sympa-roc.inria.fr/wws/arc/caml-list/2012-01/msg00092.html</cwn_url>
      <cwn_who>Maxence Guesdon announced</cwn_who>
      <cwn_what>
In order to test OCaml-rdf[1], I exported the OCaml Hump data as an RDF
graph. The data is available in three formats:
  XML: http://pauillac.inria.fr/~guesdon/hump-data.xml
  turtle: http://pauillac.inria.fr/~guesdon/hump-data.turtle
  ntriples: http://pauillac.inria.fr/~guesdon/hump-data.ntriples

The vocabulary used is here (and I hope it is correct):
   http://pauillac.inria.fr/~guesdon/hump.turtle

If some of you find this information useful, let me know so that such a
dump can be created every night.

I'm a beginner regarding all these semantic web formats, so do not hesitate
to tell me if I'm doing something wrong.

[1] http://ocaml-rdf.forge.ocamlcore.org/
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>ODT 2.1 released</cwn_title>
      <cwn_url>https://sympa-roc.inria.fr/wws/arc/caml-list/2012-01/msg00105.html</cwn_url>
      <cwn_who>Emmanuel Dieul announced</cwn_who>
      <cwn_what>
This mail announces the new release of ODT: 2.1. 
ODT (OCaml Development Tools) is an Eclipse plug-in for OCaml.

More information on this release is available at &lt;http://ocamldt.free.fr/spip.php?breve25&gt;.

Don't hesitate to try ODT, even for fun. ODT can be installed as explained
into the install notes (&lt;http://ocamldt.free.fr/spip.php?article5&gt;). 
A tutorial and several screenshots are available on the ODT website.

Thanks a lot for using ODT.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Hello &amp; F# Applied Research Jobs at MSR Cambridge</cwn_title>
      <cwn_url>https://sympa-roc.inria.fr/wws/arc/caml-list/2012-01/msg00130.html</cwn_url>
      <cwn_who>Don Syme announced</cwn_who>
      <cwn_what>
First, a friendly hello from the F# group at Microsoft.
 
We have positions open at Microsoft Research in Cambridge, UK, which may be of
interest for those following ML-related languages. We would welcome
applications from people with a background in OCaml and applied research
topics. Please pass this on to anyone else who you think may be interested
 
http://blogs.msdn.com/b/dsyme/archive/2012/01/14/come-and-work-with-the-f-group-at-microsoft-research-in-cambridge.aspx
 
Many thanks and best wishes
Don Syme
 
Come and work with the F# group at Microsoft Research in Cambridge!

Microsoft Research in Cambridge has open positions for very high quality
applicants with advanced computer science skills (normally recent PhD-level
graduates or highly relevant industry experience), and internships for current
PhD candidates or other talented masters students.

I would like to encourage potential candidates interested in any topic related to 
- F# itself, as a language and tool set
- Topics on the boundary of F# and its applications (for example, GPGPU
  programming with F#, variations on Hadoop programming with F# or other
  parallel/advanced programming)
- Variations on "Information rich programming" with F# and massively rich
  information sources, including other variations on meta-programming and
  compiler extensibility

A particular growing interest area for pulling advanced F# experimental work
together is in the field of web-delivered, data-rich cloud programming. Think
of taking some of the world's greatest applied programming language work,
delivering it to high quality in educative web-delivered learning
environments, combine it with innovative techniques for strong typing and
information-rich programming, combine with the wealth of rich information
sources that make the modern web, integrate with modern backend execution
environments, strategies, machine-learning tools and products, both
homogeneous and heterogeneous, and deliver it into the hands of real users.

Often postdoc and intern positions at MSR have a 100%
theory/research/publication focus. However, in this case we are explicitly
interested in candidates who would like to pursue a combined practice &amp;
research agenda, looking for a virtuous feedback cycle between the two. In
this situation, the joy of making things, playing with real software and
delivering it to thousands users is valued as much as writing a
paper. Candidates might also see this position as a transition step to a
research position, a startup, a lead product development role, or to an
academic role where hands-on practice is highly valued.

If you are completing your PhD, or have recently completed, and would like to
consider working in this kind of field at MSR Cambridge, then please feel free
to apply directly to me (dsyme AT microsoft.com), or apply directly for a
postdoc position or an internship.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Building on Windows</cwn_title>
      <cwn_url>https://sympa-roc.inria.fr/wws/arc/caml-list/2012-01/msg00153.html</cwn_url>
      <cwn_who>Hans Ole Rafaelsen announced</cwn_who>
      <cwn_what>
I have put up a page on my attempt to build OCaml on Windows. It builds using
the mingw cross compiler under cygwin. It uses the GODI package manager. It's
still a few issues here and there, and requires some manual steps, but it's
able to build around 30 packages. Guess some additional packages will build
without modification as well, while others need some patching.

For more info see: 

https://sites.google.com/site/godiwin32test/home
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other Caml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Thanks to Alp Mestan, we now include in the Caml Weekly News the links to the
recent posts from the ocamlcore planet blog at &lt;http://planet.ocamlcore.org/&gt;.

Share your mistakes: adventures in optimization:
  &lt;http://blog.incubaid.com/2012/01/17/share-your-mistakes-adventures-in-optimization/&gt;

gapi-ocaml:
  &lt;https://forge.ocamlcore.org/projects/gapi-ocaml/&gt;

gloc:
  &lt;https://forge.ocamlcore.org/projects/gloc/&gt;

Making staging explicit:
  &lt;https://ocaml.janestreet.com/?q=node/103&gt;

Reusing JavaScript libraries: JQuery UI:
  &lt;http://blog.opalang.org/2012/01/reusing-javascript-libraries-jquery-ui.html&gt;

Eighteen Million Noises:
  &lt;http://alaska-kamtchatka.blogspot.com/2012/01/eighteen-million-noises.html&gt;

File Sharing on the Spot:
  &lt;http://alaska-kamtchatka.blogspot.com/2012/01/file-sharing-on-spot.html&gt;

Calcul avec OCaml 0.2:
  &lt;http://caml.inria.fr/cgi-bin/hump.cgi?contrib=790&gt;

LiveRoom: new Opa forum:
  &lt;http://blog.opalang.org/2012/01/liveroom-new-opa-forum.html&gt;

OCamlspotter 1.3.0:
  &lt;http://caml.inria.fr/cgi-bin/hump.cgi?contrib=660&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>