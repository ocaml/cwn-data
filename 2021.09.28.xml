<?xml version="1.0" encoding="utf-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2021.09.28</cwn_date>
    <cwn_prev>2021.09.21</cwn_prev>
    <cwn_next>2021.10.05</cwn_next>
    <cwn_date_text>September 21 to 28, 2021</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>Brr 0.0.2, a toolkit for programming browsers</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-brr-0-0-2-a-toolkit-for-programming-browsers/8521/1</cwn_url>
      <cwn_who>Daniel Bünzli announced</cwn_who>
      <cwn_what>
It's my pleasure to announce the release ~0.0.2~ of [~Brr~](https://erratique.ch/software/brr), a toolkit for
programming browsers in OCaml with the [~js_of_ocaml~](https://ocsigen.org/js_of_ocaml) compiler.

Once it has made it to the repo, install with ~opam install brr~ and consult the [API docs and
manuals](https://erratique.ch/software/brr/doc/) (or via ~odig doc brr~).

This release fixes binding bugs, adds a few new bindings and tweaks some existing signatures. Thanks to all of those
who provided bug reports, suggestions and code.

The [release notes](https://github.com/dbuenzli/brr/blob/master/CHANGES.md#v002-2020-09-23-zagreb) have all the
details.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Become an Outreachy Mentor: support the growth and diversity of the OCaml community</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/become-an-outreachy-mentor-support-the-growth-and-diversity-of-the-ocaml-community/8213/13</cwn_url>
      <cwn_who>Thibaut Mattio announced</cwn_who>
      <cwn_what>
I've submitted two projects for the winter session:

- Integrate a package health check in ocaml.org

To essentially integrate a version of check.ocamllabs.io that can be used by opam-repository maintainers and opam
users into the next version of ocaml.org (https://v3.ocaml.org).

- Support ~.eml~ files in OCaml's VSCode extension

To add support for Dream's [~.eml~ files](https://github.com/aantron/dream/tree/master/example/7-template) syntax in
the extension, and eventually have error reporting for these files from OCaml LSP Server.

I'm more than interested in having co-mentors for these two projects, so if you wanted to mentor Outreachy interns
but didn't have any project ideas, don't hesitate to reach out :slight_smile:

Another way to help that does not involve mentoring is to find good first issues that will help onboard and select
candidates for the projects. Any help on this effort to identify, create and document good first issues for the
different projects is more than welcome!
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>OCaml 4.13.0 (and 4.12.1)</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ocaml-4-13-0-and-4-12-1/8529/1</cwn_url>
      <cwn_who>octachron announced</cwn_who>
      <cwn_what>
The OCaml team ha the pleasure of celebrating the 175th anniversary of the discovery of Neptune
by announcing the joint releases of OCaml version 4.13.0 and 4.12.1 .

Some of the highlights in the 4.13.0 release are:

- Safe points: a multicore prerequisite that ensures that ocamlopt-generated code can always be interrupted.
- The best-fit GC allocation policy is now the default policy (and many other GC improvements).
- Named existential type variables in pattern matching: ~Showable (type a) (x, show : a * (a -> string))~.

- Improved error messages for functor application and functor types.
- Let-punning for monadic let: ~let* x = x in~ can be shortened to ~let* x in~.
- Module type substitutions: ~SIG with module type T = F(X).S~.

- Many other quality of life improvements
- Many bug fixes

The 4.12.1 release is a collection of safe bug fixes, cherry-picked from the 4.13.0 development
cycle. If you were using OCaml 4.12.0 and cannot yet upgrade to 4.13.0, this release is for you.

The full list of changes can be found in the changelogs below. (*Editor note*: as it’s quite long, it is not included here. Please follow the link to the original article to read it.)

Those releases are available as OPAM switches, and as a source download here:

- https://github.com/ocaml/ocaml/archive/4.13.0.tar.gz
- https://caml.inria.fr/pub/distrib/ocaml-4.13/

and there:

- https://github.com/ocaml/ocaml/archive/4.12.1.tar.gz
- https://caml.inria.fr/pub/distrib/ocaml-4.12/
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other OCaml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Here are links from many OCaml blogs aggregated at [[http://ocaml.org/community/planet/][OCaml Planet]].

- [[https://marigold.dev/blog/announcing-hangzhou/][Announcing Tezos’ 8th protocol upgrade proposal: Hangzhou]]
- [[http://gallium.inria.fr/blog/measuring-compilation-time/][Measuring OCaml compilation speed after a refactoring]]
- [[http://binaryanalysisplatform.github.io/2021/09/15/writing-lifters-using-primus-lisp/][Writing Lifters Using Primus Lisp]]
- [[https://tarides.com/blog/2021-09-06-tarides-returns-to-fic-2021][Tarides Returns to FIC 2021]]
- [[https://www.ocamlpro.com/2021/09/02/generating-static-and-portable-executables-with-ocaml/][Generating static and portable executables with OCaml]]
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
