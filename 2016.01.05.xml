<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2016.01.05</cwn_date>
    <cwn_prev>2015.12.29</cwn_prev>
    <cwn_next>2016.01.12</cwn_next>
    <cwn_date_text>December 29, 2015 to January 05, 2016</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>How to create a local opam repository for offline use?</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-01/msg00008.html</cwn_url>
      <cwn_who>François Berenger asked and François Bobot replied</cwn_who>
      <cwn_what>
&gt; What is the current procedure to prepare an opam repository
&gt; so that a machine that has no internet access can still use
&gt; opam ?
&gt;
&gt; Furthermore, is it possible to create a minimal opam repository,
&gt; so also for offline use, but let's say I know only a single
&gt; software with all its dependencies will be installed by the
&gt; offline machine.
&gt; Because, I am foreseeing that downloading all tarballs of all possible
&gt; ocaml software/libraries might exhaust my patience.

The relevant issues are, I think:
https://github.com/ocaml/opam/issues/2098

And a PR that solve some remaining problems with virtual packages:
https://github.com/ocaml/opam/pull/2257

However I need to rewrite it in order to have something less hackish.
      </cwn_what>
      <cwn_who>François Beranger then said</cwn_who>
      <cwn_what>
OK, thanks for the info, so here is a recipe that worked for me:

wget https://github.com/ocaml/opam-repository/archive/master.tar.gz
tar xzf master.tar.gz
cd opam-repository-master
opam-admin make --resolve PKG
# here I needed to remove
# ocamlbuild from the depends field in the opam file of several packages
# so that the solver finally succeed, so opam-admin-make probably has
# a bug
opam repo add offline $PWD
opam repo remove default # then I have only one opam repository setup
# here I turned off my network card
opam update
opam install PKG # worked using tarballs from the local-disk only
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Ocaml Github Pull Requests</cwn_title>
      <cwn_who>Gabriel Scherer compiled this list</cwn_who>
      <cwn_what>
Here is a sneak peek at some potential future features of the Ocaml
compiler, discussed by their implementers in these Github Pull Requests.

Do more optimization (part 1)
https://github.com/ocaml/ocaml/pull/391
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other OCaml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Thanks to Alp Mestan, we now include in the OCaml Weekly News the links to the
recent posts from the ocamlcore planet blog at &lt;http://planet.ocaml.org/&gt;.

Andrej Bauer: A Brown-Palsberg self-interpreter for Gödel’s System T
  &lt;http://math.andrej.com/2016/01/04/a-brown-palsberg-self-interpreter-for-godels-system-t/&gt;

Thomas Leonard: A Unikernel Firewall for QubesOS
  &lt;http://roscidus.com/blog/blog/2016/01/01/a-unikernel-firewall-for-qubesos/&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
