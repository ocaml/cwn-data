Hello,

Here is the latest Caml Weekly News, for the week of October 16 to 23, 2007.

1) pa_oo and pa_polymap for 3.10
2) Sexplib now available for OCaml 3.10

========================================================================
1) pa_oo and pa_polymap for 3.10
Archive: <http://groups.google.com/group/fa.caml/browse_frm/thread/b295006a4b3cb0c3/b8f65366ff33d2f5#b8f65366ff33d2f5>
------------------------------------------------------------------------
** Jacques Garrigue announced:

I've just added versions of pa_oo and pa_polymap working with 3.10. 
Sorry for the long delay... 

<http://www.math.nagoya-u.ac.jp/~garrigue/code/ocaml.html>
			
========================================================================
2) Sexplib now available for OCaml 3.10
Archive: <http://groups.google.com/group/fa.caml/browse_frm/thread/6d87dd2e32378d45/7357515c6ebe3223#7357515c6ebe3223>
------------------------------------------------------------------------
** Markus Mottl announced:

I am happy to announce that the Sexplib library has been ported to OCaml 3.10: 

 <http://ocaml.info/home/ocaml_sources.html#sexplib310> 

It now depends on the type-conv library, which factors out common 
functionality for future type conversion libraries (e.g. an upcoming 
type-safe and extremely efficient binary protocol library): 

 <http://ocaml.info/home/ocaml_sources.html#type-conv> 

Sexplib is also available through Godi, which will automatically 
resolve the dependency on type-conv. 

The new release also comes with several bug fixes, performance 
improvements and small feature extensions. 

Here is a short description of Sexplib (from the README): 

 This library contains functionality for parsing and pretty-printing 
 S-expressions. In addition to that it contains an extremely useful 
 preprocessing module for Camlp4, which can be used to automatically 
 generate code from type definitions for efficiently converting OCaml-values 
 to  S-expressions and vice versa. In combination with the parsing and 
 pretty-printing functionality this frees users from having to write their own 
 I/O-routines for datastructures they define. Possible errors during automatic 
 conversions from S-expressions to OCaml-values are reported in a very 
 human-readable way. Another module in the library allows you to extract and 
 replace sub-expressions in S-expressions.
			
========================================================================
Using folding to read the cwn in vim 6+
------------------------------------------------------------------------
Here is a quick trick to help you read this CWN if you are viewing it using
vim (version 6 or greater).

:set foldmethod=expr
:set foldexpr=getline(v:lnum)=~'^=\\{78}$'?'<1':1
zM
If you know of a better way, please let me know.

========================================================================
Old cwn
------------------------------------------------------------------------

If you happen to miss a CWN, you can send me a message
(alan.schmitt@polytechnique.org) and I'll mail it to you, or go take a look at
the archive (<http://alan.petitepomme.net/cwn/>) or the RSS feed of the
archives (<http://alan.petitepomme.net/cwn/cwn.rss>). If you also wish
to receive it every week by mail, you may subscribe online at
<http://lists.idyll.org/listinfo/caml-news-weekly/> .

========================================================================


