<?xml version="1.0" encoding="UTF-8"?>
<cwn>
<cwn_head>
  <cwn_date>2006.02.28</cwn_date>
  <cwn_prev>2006.02.21</cwn_prev>
  <cwn_next>2006.03.07</cwn_next>
  <cwn_date_text>February 21 to 28, 2006</cwn_date_text>
</cwn_head>
<cwn_body>
<cwn_entry>
	<cwn_title>PG'OCaml - type safe bindings for PostgreSQL</cwn_title>
	<cwn_url>http://thread.gmane.org/gmane.comp.lang.caml.general/32287</cwn_url>
	<cwn_who>Richard Jones announced</cwn_who>
        <cwn_what>
Not the only bindings for PostgreSQL, of course.  Not even the only
type safe ones.

http://merjis.com/developers/pgocaml

The license is LGPL + linking exception.

We rewrote some big chunks of code over the weekend to use this new
interface (in preference to ocamldbi) and the results were quite
successful.
        </cwn_what>
      </cwn_entry>
      <cwn_entry>
        <cwn_title>Camomile 0.6.4</cwn_title>
        <cwn_url>http://thread.gmane.org/gmane.comp.lang.caml.general/32298</cwn_url>
        <cwn_who>Yamagata Yoriyuki announced</cwn_who>
        <cwn_what>
I'm pleased to announce Camomile 0.6.4, a comprehensive Unicode
library for OCaml.  This release is a bug fix release.

Change:
	Native code library (camomile.cmxa) becomes link-able

Download:
	https://sourceforge.net/project/showfiles.php?group_id=40603&amp;package_id=32800&amp;release_id=395662
        </cwn_what>
      </cwn_entry>
      <cwn_entry>
        <cwn_title>Xdialog2Ocaml and Kdialog2Ocaml</cwn_title>
        <cwn_url>http://thread.gmane.org/gmane.comp.lang.caml.general/32324</cwn_url>
        <cwn_who>Kévin Sejourne announced</cwn_who>
        <cwn_what>
I'm pleased to announce the availability of Xdialog2Ocaml and 
Kdialog2Ocaml with a support of all pop-up windows. There is some 
function that are not avaible in the both tools but the main difference 
is the use of polymorphic variants or build-in types + exceptions.
The interfaces are under licence GPL.

enjoy!

Downloads.

Xdialog2Ocaml :
http://www.limsi.fr/Individu/sejourne/distrib/Xdialog2Ocaml.tar.gz

Kdialog2Ocaml :
http://www.limsi.fr/Individu/sejourne/distrib/kdialog2Ocaml.tar.gz
        </cwn_what>
      </cwn_entry>
      <cwn_entry>
        <cwn_title>Map.fold behavior changed</cwn_title>
        <cwn_url>http://article.gmane.org/gmane.comp.lang.caml.general/32348</cwn_url>
        <cwn_who>Deep in this thread, Brian Hurt said and Jean-Christophe Filliatre added</cwn_who>
        <cwn_what>
&gt; I may take this opportunity to offer a red-black tree implementation of 
&gt; Map as a replacement, if people are interested.  The advantage a 
&gt; red-black tree is that it uses one less word of memory per element in a 
&gt; map.

For  information, I  wrote an  implementation of  Set  using red-black
trees a long time ago. It is available here:

  http://www.lri.fr/~filliatr/software.en.html

Note:  this  code was  even  formally  proved  correct using  a  proof
assistant. Getting Map from Set is rather straightforward.

I also did some benchmarks  to compare red-black trees, patricia trees
and  Ocaml AVLs  and, as  time is  concerned, the  AVLs  were (almost)
always the most efficient.
        </cwn_what>
      </cwn_entry>
      </cwn_body>
    </cwn>
