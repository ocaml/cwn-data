<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2018.09.18</cwn_date>
    <cwn_prev>2018.09.11</cwn_prev>
    <cwn_next>2018.09.25</cwn_next>
    <cwn_date_text>September 11 to 18, 2018</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>Multicore OCaml continuous benchmarking &amp; call for benchmarks</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/multicore-ocaml-continuous-benchmarking-call-for-benchmarks/2557/1</cwn_url>
      <cwn_who>KC Sivaramakrishnan announced</cwn_who>
      <cwn_what>
I wrote a [short
post](http://kcsrk.info/multicore/ocaml/benchmarks/2018/09/13/1543-multicore-ci/)
about the continuous benchmarking infrastructure we've deployed for Multicore
OCaml + call for benchmark contributions from the community.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Dune 1.2.0</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-dune-1-2-0/2564/1</cwn_url>
      <cwn_who>Rudi Grinberg announced</cwn_who>
      <cwn_what>
On behalf of the dune team, I'm pleased to announce the release of Dune 1.2.0.
This release contains many new goodies which I will not describe here. This is
because Etienne Millon has prepared a blog post for this release:
https://gist.github.com/emillon/bab9b51d605dd018ea28728c05aa5c0b

I'd also like to personally thank him for all work he's done to make this release so great.

As usual, the change log is replicated below for your convenience.

Happy hacking!

*** 1.2.0 (14/09/2018)

- Ignore stderr output when trying to find out the number of jobs
  available (#1118, fix #1116, @diml)

- Fix error message when the source directory of ~copy_files~ does not exist.
  (#1120, fix #1099, @emillon)

- Highlight error locations in error messages (#1121, @emillon)

- Display actual stanza when package is ambiguous (#1126, fix #1123, @emillon)

- Add ~dune unstable-fmt~ to format ~dune~ files. The interface and syntax are
  still subject to change, so use with caution. (#1130, fix #940, @emillon)

- Improve error message for ~dune utop~ without a library name (#1154, fix
  #1149, @emillon)

- Fix parsing ~ocamllex~ stanza in jbuild files (#1150, @rgrinberg)

- Highlight multi-line errors (#1131, @anuragsoni)

- Do no try to generate shared libraries when this is not supported by
  the OS (#1165, fix #1051, @diml)

- Fix ~Flags.write_{sexp,lines}~ in configurator by avoiding the use of
  ~Stdune.Path~ (#1175, fix #1161, @rgrinberg)

- Add support for ~findlib.dynload~: when linking an executable using
  ~findlib.dynload~, automatically record linked in libraries and
  findlib predicates (#1172, @bobot)

- Add support for promoting a selected list of files (#1192, @diml)

- Add an emacs mode providing helpers to promote correction files
  (#1192, @diml)

- Improve message suggesting to remove parentheses (#1196, fix #1173, @emillon)

- Add ~(wrapped (transition "..message.."))~ as an option that will generate
  wrapped modules but keep unwrapped modules with a deprecation message to
  preserve compatibility. (#1188, fix #985, @rgrinberg)

- Fix the flags passed to the ppx rewriter when using ~staged_pps~ (#1218, @diml)

- Add ~(env var)~ to add a dependency to an environment variable.
  (#1186, @emillon)

- Add a simple version of a polling mode: ~dune build -w~ keeps
  running and restarts the build when something change on the
  filesystem (#1140, @kodek16)

- Cleanup the way we detect the library search path. We no longer call
  ~opam config var lib~ in the default build context (#1226, @diml)

- Make test stanzas honor the -p flag. (#1236, fix #1231, @emillon)

- Test stanzas take an optional (action) field to customize how they run (#1248,
  #1195, @emillon)

- Add support for private modules via the ~private_modules~ field (#1241, fix
  #427, @rgrinberg)

- Add support for passing arguments to the OCaml compiler via a
  response file when the list of arguments is too long (#1256, @diml)

- Do not print diffs by default when running inside dune (#1260, @diml)

- Interpret ~$ dune build dir~ as building the default alias in ~dir~. (#1259,
  @rgrinberg)

- Make the ~dynlink~ library available without findlib installed (#1270, fix
  #1264, @rgrinberg)
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Dune 1.2.1</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-dune-1-2-1/2572/1</cwn_url>
      <cwn_who>Rudi Grinberg announced</cwn_who>
      <cwn_what>
Dune 1.2.1 includes a few critical bug fixes over 1.2.0. Everyone is encouraged to upgrade as soon as possible.

On behalf of the dune team,

Happy hacking.

Change log:

*** 1.2.1 (17/09/2018)

- Enrich the ~dune~ Emacs mode with syntax highlighting and indentation. New
  file ~dune-flymake~ to provide a hook ~dune-flymake-dune-mode-hook~ to enable
  linting of dune files. (#1265, @Chris00)

- Pass ~link_flags~ to ~cc~ when compiling with ~Configurator.V1.c_test~ (#1274,
  @rgrinberg)

- Fix digest calculation of aliases. It should take into account extra bindings
  passed to the alias (#1277, fix #1276, @rgrinberg)

- Fix a bug causing ~dune~ to fail eagerly when an optional library
  isn't available (#1281, @diml)

- ocamlmklib should use response files only if ocaml >= 4.08 (@1268, @bryphe)
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other OCaml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Here are links from many OCaml blogs aggregated at [[http://ocaml.org/community/planet/][OCaml Planet]].

- [[http://kcsrk.info/multicore/ocaml/benchmarks/2018/09/13/1543-multicore-ci/][Continuous Benchmarking &amp; Call for Benchmarks]]
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
