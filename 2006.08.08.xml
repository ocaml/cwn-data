<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2006.08.08</cwn_date>
    <cwn_prev>2006.08.01</cwn_prev>
    <cwn_next>2006.08.15</cwn_next>
    <cwn_date_text>August 01 to 08, 2006</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>ocaml support in autotools</cwn_title>
      <cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/402103036959acf3/2aea3412312d2c58#2aea3412312d2c58</cwn_url>
      <cwn_who>Guillaume Rousse asked, spawning a huge thread you may read at the archive link</cwn_who>
      <cwn_what>
I'd like to have ocaml support in autotools (autoconf + automake), to 
avoid heavy code duplication between several projects (at least 
ocmalimages and activedvi). 

Autoconf support is quite simple to do, and even already done (I easily 
found  reference to 
&lt;http://www.lri.fr/~filliatr/ftp/ocaml/misc/configure.in&gt;. But instead of 
loosely distributing those macros in a custom package, as currently done 
in Debian, I'd like to submit them directly to autoconf maintainers 
(with some modification, and with author's agreement of course). They 
are OK for this, provided there is some prior consensus in ocaml 
community first, to avoid continual macro change request of course. 

Automake support is more complex, but apparently someone already tried 
it, as discussed at 
http://caml.inria.fr/pub/ml-archives/caml-list/2003/12/c9bf9f5d4423a9259f12ccc805fe4c1
http://sourceware.org/ml/automake/2003-12/msg00153.html 
I'd be interested in current status of this effort before further 
investigation. 

Comments ?
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>efficient sparse matrix implementation anyone?</cwn_title>
      <cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/f2d25d14bba464ef/58b4786ecd3592ab#58b4786ecd3592ab</cwn_url>
      <cwn_who>Continuing an old thread, Daniel Andor said</cwn_who>
      <cwn_what>
I've used LACAML with band-diagonal sparse matrices, and it worked very nicely.
There's also CamlFloat:
  http://math.ucsb.edu/~lyons/camlFloat/ 
although I have never used it. Looks enticing...
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
