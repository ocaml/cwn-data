			  ━━━━━━━━━━━━━━━━━━━
			   OCAML WEEKLY NEWS
			  ━━━━━━━━━━━━━━━━━━━


[Previous Week] [Up] [Next Week]

Hello

Here is the latest OCaml Weekly News, for the week of September 29 to
October 06, 2020.

Table of Contents
─────────────────

vue-jsoo 0.2
Rehabilitating packs using functors and recursivity, part 2
Clap 0.1.0 (Command-Line Argument Parsing)
Old CWN


[Previous Week] <http://alan.petitepomme.net/cwn/2020.09.29.html>

[Up] <http://alan.petitepomme.net/cwn/index.html>

[Next Week] <http://alan.petitepomme.net/cwn/2020.10.13.html>


vue-jsoo 0.2
════════════

  Archive: <https://discuss.ocaml.org/t/ann-vue-jsoo-0-2/6522/1>


levillain.maxime announced
──────────────────────────

  I'd like to announce the second release of vue-jsoo (vue-jsoo.0.2). A
  js_of_ocaml binding and helpers to use the vue-js framework with
  js_of_ocaml.


Xavier Van de Woestyne added
────────────────────────────

  Here is the link: <https://gitlab.com/o-labs/vue-jsoo>

  (Congratulation!)


Rehabilitating packs using functors and recursivity, part 2
═══════════════════════════════════════════════════════════

  Archive:
  <https://discuss.ocaml.org/t/rehabilitating-packs-using-functors-and-recursivity-part-2/6525/1>


OCamlPro announced
──────────────────

  Following the publication of [the first part] of our blogpost about
  the redemption of packs in the OCaml ecosystem, we are pleased to
  share "[Rehabilitating packs using functors and recursivity, part 2.]"

        This blog post and the previous one about functor packs
        covers two RFCs currently developed by OCamlPro and Jane
        Street. We previously introduced functor packs, a new
        feature adding the possiblity to compile packs as
        functors, allowing the user to implement functors as
        multiple source files or even parameterized libraries.

        In this blog post, we will cover the other aspect of the
        packs rehabilitation: allowing anyone to implement
        recursive compilation units using packs (as described
        formally in the RFC#20). Our previous post introduced
        briefly how packs were compiled and why we needed some
        bits of closure conversion to effectively implement big
        functors. Once again, to implement recursive packs we will
        need to encode modules through this technique, as such we
        advise the reader to check at least the introduction and
        the compilation part of functor packs.


[the first part]
<https://www.ocamlpro.com/2020/09/24/rehabilitating-packs-using-functors-and-recursivity-part-1/>

[Rehabilitating packs using functors and recursivity, part 2.]
<https://www.ocamlpro.com/2020/09/30/rehabilitating-packs-using-functors-and-recursivity-part-2/>


Clap 0.1.0 (Command-Line Argument Parsing)
══════════════════════════════════════════

  Archive:
  <https://discuss.ocaml.org/t/ann-clap-0-1-0-command-line-argument-parsing/6544/1>


rbardou announced
─────────────────

  I am happy to announce the first release of Clap.

  Clap is a library for command-line argument parsing. Clap works by
  directly consuming arguments in an imperative way. Traditionally,
  argument parsing in OCaml is done by first defining a specification
  (an OCaml value defining the types of arguments), and then parsing
  from this specification. The "impure" approach of Clap skips the need
  to define a specification and results in code which is quite simple in
  practice, with limited boilerplate.

  Clap is available as an opam package (`opam install clap').

  Source code, API documentation and a full commented example are
  available at: <https://github.com/rbardou/clap/>


Old CWN
═══════

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <http://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <http://alan.petitepomme.net/cwn/cwn.rss>

[online] <http://lists.idyll.org/listinfo/caml-news-weekly/>

[Alan Schmitt] <http://alan.petitepomme.net/>
