<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2009.12.08</cwn_date>
    <cwn_prev>2009.12.01</cwn_prev>
    <cwn_next>2009.12.15</cwn_next>
    <cwn_date_text>December 01 to 08, 2009</cwn_date_text>
  </cwn_head>
  <cwn_body>
		<cwn_entry>
			<cwn_title>CamlJava w/ recent JVMs - solved (patches needed and included)</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/f5bcada80b34c8fe/ca7c6fee67e19fab?lnk=gst#ca7c6fee67e19fab</cwn_url>
			<cwn_who>Stefano Zacchiroli announced</cwn_who>
			<cwn_what>
On Mon, Nov 23, 2009 at 04:55:37PM +0100, Stefano Zacchiroli wrote:
&gt; Has anyone successfully built/used CamlJava [1] with recent OCaml and
&gt; the open sourced Sun's JVM (OpenJDK)?

With the tremendous help of Grégoire Henry, we've come up to a fixed
version of CamlJava that:

- works well with recent JVMs (both Sun's 1.6 and OpenJDK)
 * fixes are both for building and for avoiding segfaults due to a
   distinction among local and global references introduced by JNI 1.6
- is a bit more debugger friendly
- has _conditional_ automatic mapping of Java strings to OCaml strings
 (needed by O'Jacare [1])
- is a bit more careful/strict in case of multithreading: you must
 ensure all Java-OCaml callbacks are called from the very same thread
 (need spotted by O'Jacare a while ago)
- fixes various minor issues that help packages

All patches are available at [2] and contain appropriate
descriptions.

The patches are integrated in the Debian package of CamlJava that I've
just uploaded to the archive. While the package gets processed for
copyright review, it is also available at:

 deb http://people.debian.org/~zack/debian zack-unstable/
 deb-src http://people.debian.org/~zack/debian zack-unstable/

Xavier: can you please consider integrating the above patches in a new
release of CamlJava?

AFAIK, a new release of O'Jacare based on the above work is being worked
on by Grégoire.

Cheers.

[1] http://www.pps.jussieu.fr/~henry/ojacare/index.en.html
[2] http://git.debian.org/?p=pkg-ocaml-maint/packages/camljava.git;a=tree;f=debian/patches
			</cwn_what>
		</cwn_entry>
		<cwn_entry>
			<cwn_title>ocaml-ofc</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/56a943d278ea603c#</cwn_url>
			<cwn_who>Florent Monnier announced</cwn_who>
			<cwn_what>
I'm pleased to annouce ocaml-ofc, a library released under the LGPL,
which is an OCaml interface for Open Flash Chart 2.

The web-site of Open Flash Chart 2 (OFC) is here:
http://teethgrinder.co.uk/open-flash-chart-2/

What is OFC?
OFC is a .swf object written in action script which takes json datas
in input and draws charts from these datas. These json datas can be
sent through various libraries written in languages like PHP, Python,
Ruby, and others ..., and now with OCaml too!

You can have an overview of what OFC can produce there:
http://teethgrinder.co.uk/open-flash-chart-2/bar-chart.php

You can download ocaml-ofc from:
http://www.linux-nantes.org/%7Efmonnier/OCaml/OFC/

You can have an overview of the interface there:
http://www.linux-nantes.org/%7Efmonnier/OCaml/OFC/ocamldoc/OFC.html

Here are some examples of use:
http://www.linux-nantes.org/%7Efmonnier/OCaml/OFC/examples/
			</cwn_what>
		</cwn_entry>
    <cwn_entry>
      <cwn_title>Other Caml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Thanks to Alp Mestan, we now include in the Caml Weekly News the links to the
recent posts from the ocamlcore planet blog at &lt;http://planet.ocamlcore.org/&gt;.

ld.ocaml 0.2.1 released:
  &lt;http://forge.ocamlcore.org/forum/forum.php?forum_id=479&gt;

ld.ocaml: OCaml dynamic linker/loader:
  &lt;https://forge.ocamlcore.org/projects/ld-ocaml/&gt;

FP-Syd #21.:
  &lt;http://www.mega-nerd.com/erikd/Blog/FP-Syd/fp-syd-21.html&gt;

OCaml-ofc:
  &lt;http://caml.inria.fr/cgi-bin/hump.cgi?contrib=719&gt;

camljava for recent JVMs:
  &lt;http://upsilon.cc/~zack/blog/posts/2009/12/camljava_for_recent_JVMs/&gt;

Gpr 0.9.4:
  &lt;http://caml.inria.fr/cgi-bin/hump.cgi?contrib=718&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>