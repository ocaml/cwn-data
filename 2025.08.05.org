#+OPTIONS: ^:nil
#+OPTIONS: html-postamble:nil
#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+OPTIONS: author:nil
#+HTML_HEAD: <style type="text/css">#table-of-contents h2 { display: none } .title { display: none } .authorname { text-align: right }</style>
#+HTML_HEAD: <style type="text/css">.outline-2 {border-top: 1px solid black;}</style>
#+TITLE: OCaml Weekly News
[[https://alan.petitepomme.net/cwn/2025.07.29.html][Previous Week]] [[https://alan.petitepomme.net/cwn/index.html][Up]] [[https://alan.petitepomme.net/cwn/2025.08.12.html][Next Week]]

Hello

Here is the latest OCaml Weekly News, for the week of July 29 to August 05, 2025.

#+TOC: headlines 1


* My fourth Outreachy Internship Blog post
:PROPERTIES:
:CUSTOM_ID: 1
:END:
Archive: https://discuss.ocaml.org/t/my-fourth-outreachy-internship-blog-post/17027/1

** Matthew Idungafa announced


Hello everyone! I've just published my first midpoint Outreachy blog post about my progress contributing to Dune. You can read it here: https://medium.com/@mattidungafa/outreachy-internship-midpoint-post-f9333c9c3c86. Stay tuned for more updates!
      



* qcheck-lin and qcheck-stm 0.2
:PROPERTIES:
:CUSTOM_ID: 2
:END:
Archive: https://discuss.ocaml.org/t/ann-qcheck-lin-and-qcheck-stm-0-2/12301/7

** Jan Midtgaard announced


Version 0.9 of ~qcheck-lin~, ~qcheck-stm~, and ~qcheck-multicoretests-util~ is now available from your favorite opam repository! :tada: 

The 0.9 release contains adjustments to the public interface of ~Lin~ in order to make it compatible with ~5.5.0+trunk~ and also switches the ~Util.Pp~ pretty printers to use ~QCheck.Print~ for consistency:

- [[https://github.com/ocaml-multicore/multicoretests/pull/566][#566]]: Use ~QCheck.Print~ combinators in ~Util.Pp~ too for consistency, e.g., to avoid that ~STM~ argument and result printer outputs differ.

- [[https://github.com/ocaml-multicore/multicoretests/pull/562][#562]]: Fix the ~int32~ and ~int64~ printers in both ~Lin~ and ~STM~ to add missing ~l~ and ~L~ suffixes on literals.

- [[https://github.com/ocaml-multicore/multicoretests/pull/560][#560]]: Change ~Lin.{constructible,deconstructible}~ from an empty variant type
  to an abstract type to get ~Lin~ compiling on ~5.5.0+trunk~ again, due to [[https://github.com/ocaml/ocaml/pull/13994][ocaml/ocaml#13994]] removing special handling of abstract and empty variants defined in the current module.

Happy testing! :smiley:
      



* CRs Workflows: Invitation for Early Testing and Discussion
:PROPERTIES:
:CUSTOM_ID: 3
:END:
Archive: https://discuss.ocaml.org/t/crs-workflows-invitation-for-early-testing-and-discussion/17036/1

** Mathieu Barbin announced


I just published a blog post about CRs Workflows, a new open source tool for managing code review comments embedded in source code, with reusable GitHub Actions workflows. If you’re interested in trying it out or sharing feedback, you can read more here: https://mbarbin.github.io/crs/blog/launching-crs-workflows/.

Thank you!
      



* OCaml version of the "Build systems à la carte" paper
:PROPERTIES:
:CUSTOM_ID: 4
:END:
Archive: https://discuss.ocaml.org/t/ocaml-version-of-the-build-systems-a-la-carte-paper/17042/1

** jbeckford announced


There is a great paper distilling several different build systems (Make, Excel, Bazel, etc.) into a unified framework. One of its authors is on the Dune team (I think). If you want to understand or write build systems, it is a good read because it uses language that can be understood by non-academics:

https://www.cambridge.org/core/journals/journal-of-functional-programming/article/build-systems-a-la-carte-theory-and-practice/097CE52C750E69BD16B78C318754C7A4

All of its examples are in Haskell so I wrote a version in OCaml. Most of my OCaml translation was aided by the English paragraphs rather than the Haskell code (the latter was hieroglyphics to me). Regardless, I’m fairly sure some of the concepts don’t translate to OCaml well.

If you are interested in build systems, the first place to start is the test directory https://gitlab.com/dkml/build-tools/MlFront/-/tree/V2_4/tests/MlFront_Thunk?ref_type=heads (the ~alacarte_*.ml~ modules). The tests correspond to the paper’s section numbers, although there are also ~alacarte_x*.ml~ tests where I extended the framework. Then you can scan the source code at https://gitlab.com/dkml/build-tools/MlFront/-/tree/V2_4/src/MlFront_Thunk?ref_type=heads (the ~Build*.ml~ and ~Promise.ml~ modules).

PRs welcome!
      



* Dream development open video call
:PROPERTIES:
:CUSTOM_ID: 5
:END:
Archive: https://discuss.ocaml.org/t/dream-development-open-video-call/17053/1

** Anton Bachin announced


Greetings!

We are planning to host the first Dream development video call with @sabine on Discord on Friday, 8 August, at 9:00 AM Berlin time.

Please join [[https://discord.com/channels/436568060288172042/439062744105484288][#webdev]] on the OCaml Discord if you’d like to participate. I will handle questions about joining the meeting there. We will probably use one of the voice chat channels on the server (which supports video).

The topic of the meeting will be discussing open PRs and getting them ready for merge by our collective efforts, and needed improvements. We would like to put off conceptual and strategic discussions until the very end of the meeting, or to a future date.

And please bear with us as we figure out what platform is best to use and how to use it :) We can’t promise that the first meeting will go without any issues, but we will work out everything based on experience :)

Hope to see you there!
      



* Other OCaml News
:PROPERTIES:
:CUSTOM_ID: 6
:END:
** From the ocaml.org blog


Here are links from many OCaml blogs aggregated at [[https://ocaml.org/blog/][the ocaml.org blog]].

- [[https://ocaml.org/events][Upcoming OCaml Events]]
- [[https://www.dra27.uk/blog/platform/2025/07/29/taming-buildkit.html][Adventures with BuildKit]]
      



* Old CWN
:PROPERTIES:
:UNNUMBERED: t
:END:

If you happen to miss a CWN, you can [[mailto:alan.schmitt@polytechnique.org][send me a message]] and I'll mail it to you, or go take a look at [[https://alan.petitepomme.net/cwn/][the archive]] or the [[https://alan.petitepomme.net/cwn/cwn.rss][RSS feed of the archives]].

If you also wish to receive it every week by mail, you may subscribe to the [[https://sympa.inria.fr/sympa/info/caml-list][caml-list]].

#+BEGIN_authorname
[[https://alan.petitepomme.net/][Alan Schmitt]]
#+END_authorname
