<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2013.02.19</cwn_date>
    <cwn_prev>2013.02.12</cwn_prev>
    <cwn_next>2013.02.26</cwn_next>
    <cwn_date_text>February 12 to 19, 2013</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>ocp-indent 1.0.0 release</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2013-02/msg00128.html</cwn_url>
      <cwn_who>Continuing the thread from last week, Louis Gesbert announced</cwn_who>
      <cwn_what>
Thanks for all the feedback and few bug reports during the past week of beta-
test.

We can now announce the 1.0.0 release of ocp-indent, available on opam.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Old and new OCaml installed on same machine?</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2013-02/msg00137.html</cwn_url>
      <cwn_who>Oliver asked and Francois Berenger replied</cwn_who>
      <cwn_what>
&gt; any ideas on how to manage multiple OCaml-installations
&gt; on one machine, without running into trouble?
&gt; 
&gt; I have 3.11.2 here on my old Ubuntu box.
&gt; I built OCaml 4.00, but stopped before the "make install",
&gt; because on a target system (a server providing my web stuff)
&gt; there also is 3.11.2 installed (older Debian system), and I'm
&gt; not root at that system.
&gt; 
&gt; But I want to compile my code there also.
&gt; So I may need to develop in two branches for a while
&gt; and do merges.
&gt; 
&gt; When I remove my 3.11.2, the testing would need me to work
&gt; on the remote machine, when testing the old-branch (the merges).
&gt; Possible, but more effort (and network delays are annoying).
&gt; 
&gt; Can more than one OCaml be installed and used in an easy way?
&gt; Or should I forget this issue because of "mission impossible"
&gt; or because of "that needs too much effort"?

I think you are looking for the opam -switch option.
It allows to "jump" from one version to another.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Sequence 0.3.1</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2013-02/msg00129.html</cwn_url>
      <cwn_who>Simon Cruanes announced</cwn_who>
      <cwn_what>
I'm happy to announce the release of Sequence 0.3.1. Sequence is
designed to compose iterations over containers in a lightweight fashion.
The goal is to transfer values between containers, or to apply
transformations (map, filter, take, etc.) on several values without
caring about where they come from. It doesn't have any dependencies.

Sequence is not designed to be as general-purpose or flexible as, say,
Batteries' `Enum.t`. Rather, it aims at providing a very simple and
efficient way of iterating on a finite number of values, only allocating
(most of the time) a few intermediate closures to do so.

For instance, if you have an array and want to build a hashtable that
contains elements mapping to their index in the array, you can write:

&gt; #require "sequence";;
&gt; let a = [| "a"; "b"; "c"; "d"; "e" |];;
&gt; let h = Hashtbl.create 3;;
&gt; Sequence.hashtbl_add h
(Sequence.map (fun (x,y) -&gt; y,x)
(Sequence.of_array_i a));;
&gt; open Format;; (* to print h *)
&gt; let pp_pair formatter (x,y) = fprintf formatter "%s -&gt; %i" x y;;
&gt; Sequence.pp_seq pp_pair std_formatter (Sequence.of_hashtbl h);;

A toy S-expression module, and a few tests are included but not compiled
by default (because they require OCaml &gt;= 4.0). The code is free (BSD
license), hosted at https://github.com/c-cube/sequence and available on
OPAM (install with `opam install sequence`).
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other Caml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Thanks to Alp Mestan, we now include in the Caml Weekly News the links to the
recent posts from the ocamlcore planet blog at &lt;http://planet.ocaml.org/&gt;.

Four:
  &lt;http://erratique.ch/software/four&gt;

Some great news on Opa:
  &lt;http://blog.opalang.org/2013/02/some-great-news-on-opa.html&gt;

Reactive ML 1.08.04:
  &lt;http://caml.inria.fr/cgi-bin/hump.cgi?contrib=846&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
