<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2019.07.09</cwn_date>
    <cwn_prev>2019.07.02</cwn_prev>
    <cwn_next>2019.07.16</cwn_next>
    <cwn_date_text>July 02 to 09, 2019</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>ppx_show: a show deriver based of ppxlib (works on 4.08.0)</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-ppx-show-a-show-deriver-based-of-ppxlib-works-on-4-08-0/4026/1</cwn_url>
      <cwn_who>Thierry Martinez announced</cwn_who>
      <cwn_what>
I am pleased to announce that ~ppx_show~ is now available in opam. ~ppx_show~ reimplements the ~show~ plugin provided by [~ppx_deriving~](https://github.com/ocaml-ppx/ppx_deriving) as a [~ppxlib~](https://github.com/ocaml-ppx/ppxlib) plugin. In particular, ~ppx_show~ is available with OCaml 4.08.0 (and is available on all OCaml versions compatible with ~ppxlib~, starting from 4.04.1).

https://gitlab.inria.fr/tmartine/ppx_show/

See @arbipher's [related question](https://discuss.ocaml.org/t/is-there-plugin-show-based-on-ppxlib-deriving/3080/2).
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Library for GUI?</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/library-for-gui/648/45</cwn_url>
      <cwn_who>Deep in this thread, sanette announced</cwn_who>
      <cwn_what>
In the last few years I have been developing a GUI for (and in) ocaml, as a hobby project.
Finally, I have made the current state of this thing (called "*bogue*") available on github, see

[https://github.com/sanette/bogue](https://github.com/sanette/bogue)

Just in case some of you are interested in having a look.
Comments welcome, of course.
      </cwn_what>
      <cwn_who>sanette later added</cwn_who>
      <cwn_what>
I just made a video to show some of *bogue*'s features:

https://youtu.be/isFLxnDooL8
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>XMPP room (muc) for OCaml</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/xmpp-room-muc-for-ocaml/4039/1</cwn_url>
      <cwn_who>Orbifx announced</cwn_who>
      <cwn_what>
I'm not aware of any other XMPP rooms for OCaml, so I've made one:

&lt;xmpp:ocaml@conference.orbitalfox.eu?join&gt;

Come join if you want to hang out with OCamlers.

Ideas &amp; thoughts are welcome!
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>obus 1.2.0</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-obus-1-2-0/4038/1</cwn_url>
      <cwn_who>Freyr666 announced</cwn_who>
      <cwn_what>
I'm pleased to announce a new ~obus~ release.

*** What is obus

A pure OCaml implementation of the D-Bus IPC protocol, heavily used in Freedesktop/linux world [1].

*** Notable changes

- ~obus~ is being transitioned to ~ocaml-community~
- switched to ~dune~
- ~camlp4~ parts were replaced with ~menhir~
- ~camlp4~ syntax extension was replaced with the ~ppx~-based ones

This release shouldn't break anything (safe for the syntax extension).

Special thanks to @steinuil and @pukkamustard for doing most of the "dunification" work.

*** Thoughts about the future

So after pondering on obus refactoring I came to the following ideas, which I would like to discuss:

1) ~IDL~, an intermediate language used for the D-Bus interfaces' description doesn't worth the effort and is better to be dropped.

    D-Bus uses XML for such a purpose and there is no merit in having an additional language doing the same (with minor improvements like not being XML-abomination and the ability to define numeric types as OCaml variants). It makes sense to generate OCaml files from the XML directly and don't use any obus-specific additional language.

2) ~ppx~ syntax extensions could also be dropped since they don't do much stuff. Also I haven't seen anybody using them, but I could be wrong.

    So it's better to either improve it (maybe turn IDL language into simple ~ppx~ annotations) or drop it completely. Personally, I like the idea of not using ~ppx~ because they are slowing things down making the project lag behind ocaml releases, and making things fragile in general.

3) obus should be split into proper subpackages, like ~obus~, ~obus-network-manager~, ~obus-notifications~ etc

So since it's a community project from now on, it would be great to hear what obus users and contributors are thinking about all forementioned. cast @diml @talex5 @perry @johnelse

[1] https://www.freedesktop.org/wiki/Software/dbus/
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>PSA: ocaml/opam2 docker images updated to 4.08.0 release</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/psa-ocaml-opam2-docker-images-updated-to-4-08-0-release/3948/2</cwn_url>
      <cwn_who>Anil Madhavapeddy announced</cwn_who>
      <cwn_what>
Another update: the base distributions of the ocaml/opam2 images have also been updated to support Fedora 30, Alpine 3.10, OpenSUSE Leap 42.1 and also the impending Debian 10 (Buster) release.  We have also deprecated Fedora 27/28, Ubuntu 14.04 and Alpine 3.8 in favour of the newer releases.   The 4.09 switches also reflect the recently released 4.09+beta1 snapshot.

There have been a few requests for 'slimmer' images that use up less disk-space. The reason the existing ones are so big is that each container has multiple precompiled compilers (either multiple major releases, or feature variants such as flambda or afl).  This is really useful for continuous integration, but is less ideal if you just want a quick OCaml compiler container to build some software on your QubesOS laptop.

In order to accommodate both usecases, I'm going to resurrect the ~ocaml/opam~ containers for the "slim" usecase.  The containers in ~ocaml/opam~ are currently deprecated while we did the opam2 release, but now that is out of the way we can remove the opam1 containers.  Over the next few months, we'll have ~ocaml/opam~ containers with minimally sized toolchains for production compilation use, and the ~ocaml/opam2~ containers will continue to be maintained unchanged for CI use.

As always, more feedback or usecases welcome to help guide the evolution of this infrastructure.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other OCaml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Here are links from many OCaml blogs aggregated at [[http://ocaml.org/community/planet/][OCaml Planet]].

- [[https://tarides.com/blog/2019-07-05-i-lab-2019.html][i-Lab 2019]]
- [[http://math.andrej.com/2019/07/04/what-is-an-explicit-bijection-fpsac-2019-slides/][What is an explicit bijection? (FPSAC 2019 slides)]]
- [[https://tarides.com/blog/2019-06-27-release-of-ocamlformat-0-10.html][Release of OCamlFormat 0.10]]
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
