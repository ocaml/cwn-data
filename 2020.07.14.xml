<?xml version="1.0" encoding="utf-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2020.07.14</cwn_date>
    <cwn_prev>2020.07.07</cwn_prev>
    <cwn_next>2020.07.21</cwn_next>
    <cwn_date_text>July 07 to 14, 2020</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>OCaml 4.11.0, second beta release</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ocaml-4-11-0-second-beta-release/6063/1</cwn_url>
      <cwn_who>octachron announced</cwn_who>
      <cwn_what>
The release of OCaml 4.11.0 is approaching.
As one step further in this direction, we have published a second beta
release. This new release fixes an MSVC-specific runtime issue.

The compatibility of the opam ecosystem with OCaml 4.11.0 is currently quite
good with only 7 packages not currently available, and it should be possible to
test this beta without too much trouble.

The source code is available at these addresses:

 https://github.com/ocaml/ocaml/archive/4.11.0+beta2.tar.gz \\
 https://caml.inria.fr/pub/distrib/ocaml-4.11/ocaml-4.11.0+beta2.tar.gz

The compiler can also be installed as an OPAM switch with one of the
following commands:
#+begin_src shell
opam switch create ocaml-variants.4.11.0+beta2 --repositories=default,beta=git+https://github.com/ocaml/ocaml-beta-repository.git
#+end_src
or
#+begin_src shell
opam switch create ocaml-variants.4.11.0+beta2+&lt;VARIANT&gt; --repositories=default,beta=git+https://github.com/ocaml/ocaml-beta-repository.git
#+end_src

 where you replace &lt;VARIANT&gt; with one of these: afl, flambda, fp, fp+flambda

We would love to hear about any bugs. Please report them here:
 https://github.com/ocaml/ocaml/issues

If you are interested by the list of new features, and the on-going list
of bug fixes the updated change log for OCaml 4.11.0 is available at:

  https://github.com/ocaml/ocaml/blob/4.11/Changes

Compared to the previous beta release, the exhaustive list of changes
is as follows:

*** Runtime

- [#9714](https://github.com/ocaml/ocaml/issues/9714), [#9724](https://github.com/ocaml/ocaml/issues/9724): Use the C++ alignas keyword when compiling in C++. Fixes a bug with MSVC C++ 2015/2017. Add a terminator to the ~caml_domain_state~ structure to better ensure that members are correctly spaced. (Antonin Décimo, review by David Allsopp and Xavier Leroy)

*** Manual and documentation

- [#8644](https://github.com/ocaml/ocaml/issues/8644): fix formatting comment about @raise in stdlib's mli files (Élie Brami, review by David Allsopp)

- [#9712](https://github.com/ocaml/ocaml/issues/9712): Update the version format to allow "~". The new format is "major.minor[.patchlevel][(+|~)additional-info]", for instance "4.12.0~beta1+flambda". This is a documentation-only change for the 4.11 branch, the new format will be used starting with the 4.12 branch. (Florian Angeletti, review by Damien Doligez and Xavier Leroy)
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>letters - simple client abstractions for sending emails over SMTP</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-letters-simple-client-abstractions-for-sending-emails-over-smtp/6071/1</cwn_url>
      <cwn_who>Miko announced</cwn_who>
      <cwn_what>
Earlier today I've published the first release of [letters](https://github.com/oxidizing/letters). This
library aims to provide simple to use client library for sending emails over SMTP using _lwt_ for async
execution.

It is build on top of _mrmime_ and _colombe_. While these libraries are very capable, they aren't that
simple to use, _letters_ is trying to fill that gap. Anyway, big thanks for the authors of these
projects for doing the heavy lifting.

As this library is still in its early stage, I believe I will break the API with first few releases.
Luckily the API is quite simple so following these changes should be quite easy.

To make this library awesome, any feedback or feature request is welcome. I'll try to address them as
quickly as I can.

I hope I've managed to scratch someone else's itch too, enjoy.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>A question about Ocaml</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/a-question-about-ocaml/6075/21</cwn_url>
      <cwn_who>Deep in this theard, Yawar Amin said</cwn_who>
      <cwn_what>
A few ReasonML books:

- [Web Development With ReasonML](https://pragprog.com/titles/reasonml/)
- [Exploring ReasonML](http://reasonmlhub.com/exploring-reasonml/toc.html) (free online)
- [Learn Type-Driven Development](https://www.packtpub.com/application-development/learn-type-driven-development) (co-authored by me)
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Alcotest 1.2.0</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-alcotest-1-2-0/6089/1</cwn_url>
      <cwn_who>Craig Ferguson announced</cwn_who>
      <cwn_what>
I'm pleased to announce the release of [Alcotest](https://github.com/mirage/alcotest/) 1.2.0, now
available on Opam.

This release includes:
- a new ~alcotest-mirage~ package for running tests on MirageOS;
- full UTF-8 support;
- default coloured output in Dune (without needing to pass ~--no-buffer~);
- an improved output format.

The full changelog is available [here](https://github.com/mirage/alcotest/blob/1.2.0/CHANGES.md).

https://aws1.discourse-cdn.com/standard11/uploads/ocaml/original/2X/a/ac89cfe4dfeed063560212136c9e2b690a888b6c.png

Thanks to our many contributors in this release cycle.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Set up OCaml 1.1.0</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-set-up-ocaml-1-1-0/6093/1</cwn_url>
      <cwn_who>Sora Morimoto announced</cwn_who>
      <cwn_what>
This release contains these changes:

- The default opam repository can now be set via input.
- Linux VMs now use opam 2.0.7.

https://github.com/avsm/setup-ocaml/releases/tag/v1.1.0
      </cwn_what>
      <cwn_who>Sora Morimoto then added</cwn_who>
      <cwn_what>
In fact, this release was a long time ago, but I completely forgot to post this. By the way, we have
made significant improvements to some of the documentation. In particular, the action versioning
section is applicable to other GitHub Actions and definitely worth reading!
https://github.com/avsm/setup-ocaml#how-to-specify-the-version
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
