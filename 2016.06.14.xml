<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2016.06.14</cwn_date>
    <cwn_prev>2016.06.07</cwn_prev>
    <cwn_next>2016.06.21</cwn_next>
    <cwn_date_text>June 07 to 14, 2016</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>How to include files dynamically</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-06/msg00022.html</cwn_url>
      <cwn_who>Nicolas Ratier asked and Sébastien Hinderer replied</cwn_who>
      <cwn_what>
&gt; Is there a way to include files dynamically ?
&gt; a kind of :
&gt; 
&gt; let aaa = "myfile.ml";;
&gt; #use aaa;;
&gt; 
&gt; Thanks,

Have you looked at the dynlink module?

As far as I know it can load only object files so you would have to
compile your .ml file before. Not sure there is a better alternative.
      </cwn_what>
      <cwn_who>Mark Bradley also suggested</cwn_who>
      <cwn_what>
You can try ocaml_plugin (also uses dynlink but will compile the .ml file before
loading, I've also never tried it from the OCaml repl):

https://github.com/janestreet/ocaml_plugin
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>omake-0.10.0-test2</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-06/msg00026.html</cwn_url>
      <cwn_who>Gerd Stolpmann announced</cwn_who>
      <cwn_what>
there is a new test release of omake. It includes all the developments
since I started taking omake over last year, in particular:

 - omake got faster for large projects (this part of the work was
   funded by Lexifi)
 - there is a new bootstrap system that unifies Unix and Windows
 - it now also works with the MinGW port
 - a couple of bugs were fixed

This is a test release. In particular, it would be good to know whether
the new bootstrap works everywhere, and whether I package omake up
correctly.

The tarball can be downloaded at
&lt;http://projects.camlcity.org/projects/omake.html&gt;. The repository is now
at Github, &lt;https://github.com/gerdstolpmann/omake&gt;. There is also an
issue tracker.

omake requires now ocaml-4.02 as minimum.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Bisect_ppx: removing report output formats, etc.</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-06/msg00030.html</cwn_url>
      <cwn_who>Anton Bachin announced</cwn_who>
      <cwn_what>
We are in the process of removing the following features from Bisect_ppx, as we
don’t believe they are used:

- combine expressions (reporter’s -combine-expr)
- XML output
- EMMA output
- “bisect” output [1]
- point kinds (mentioned earlier [2])

We would also like to remove “dump” output, but we are using it internally for
testing.

Please let me know of any objections.

Best,
Anton

[1]: https://github.com/aantron/bisect_ppx/pull/106
[2]: https://sympa.inria.fr/sympa/arc/caml-list/2016-06/msg00004.html
      </cwn_what>
      <cwn_who>Anton Bachin added</cwn_who>
      <cwn_what>
I would like to clarify that -combine-expr is not about combining multiple
output files as in

bisect-ppx-report -html report *.out

That is not being removed.

-combine-expr is a separate feature that allows visitation counts of two or more
separate sets of *.out files to be manipulated, for example by subtracting them,
to obtain a new report.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>OCaml workshop 2016: deadline extension until 20th June</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-06/msg00060.html</cwn_url>
      <cwn_who>Mark Shinwell announced</cwn_who>
      <cwn_what>
We would be pleased to receive a few more proposals for talks at the
OCaml workshop this year.  To this end, we are extending the deadline
for submissions until 20th June, in any time zone.

See &lt;http://alan.petitepomme.net/cwn/2016.06.07.html#2&gt; for the CFP.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>ML workshop 2016: deadline extension until 20th June</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-06/msg00061.html</cwn_url>
      <cwn_who>Kenichi Asai announced</cwn_who>
      <cwn_what>
Coordinating with OCaml workshop, we also receive more submissions until 20th
June, any time zone.

Call for papers: http://www.mlworkshop.org/ml2016/
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other OCaml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Here are links from many OCaml blogs aggregated at OCaml Planet,
&lt;http://ocaml.org/community/planet/&gt;.

Lock-free programming for the masses
 &lt;https://ocaml.io/w/Blog:News/Lock-free_programming_for_the_masses&gt;

Counting Bytes
 &lt;https://hannes.nqsb.io/Posts/BottomUp&gt;

A busy spring week at OCL: multicore progress, releases, interns and visitors galore!
 &lt;https://ocaml.io/w/Blog:News/A_busy_spring_week_at_OCL:_multicore_progress,_releases,_interns_and_visitors_galore!&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
