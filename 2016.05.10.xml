<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2016.05.10</cwn_date>
    <cwn_prev>2016.05.03</cwn_prev>
    <cwn_next>2016.05.17</cwn_next>
    <cwn_date_text>May 03 to 10, 2016</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>OCamlbuild 0.9.2</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-05/msg00019.html</cwn_url>
      <cwn_who>Gabriel Scherer announced</cwn_who>
      <cwn_what>
Since 4.03, ocamlbuild is distributed separately from the OCaml compiler,
as announced in:
  https://sympa.inria.fr/sympa/arc/caml-list/2015-12/msg00003.html

Early-adopters have been able to use ocamlbuild 0.9.0 and 0.9.1 since
before the official 4.03 release, and the migration seems to have been
fairly smooth.

OCamlbuild 0.9.2, released on the Workers' Day, better supports
some 4.03-related options.

In particular, Martin Neuhäußer contributed new flags for flambda-specific
optimization options.
We also extend the scope of the flags -opaque and -for-pack, to align
with 4.03 best practices.

- #67: Add support for flambda's optimization parameters
  The flags are named according to the flambda options with two exceptions:
    optimization_rounds(int) for -rounds &lt;int&gt;
    optimize({2,3,classic}) for -O{2,3,classic}
  (Martin Neuhäußer)
- #70 (partial): fix hygiene complains about the build directory under
  Windows
  (Andreas Hauptmann, Gabriel Scherer)
- #73: also pass predicates(foo) to ocamldep
  (Jérémie Dimino)
- extend the scope of the -opaque flag under 4.03
  (Gabriel Scherer)
- extend the scope of the -for-pack flag to ocamlc,
  as recommend by OCaml compiler maintainers in
  [PR#5996](&lt;http://caml.inria.fr/mantis/view.php?id=5995#c13339&gt;)
  (Gabriel Scherer)
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>IDE like PyCharm</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-05/msg00040.html</cwn_url>
      <cwn_who>Allan Wegan asked</cwn_who>
      <cwn_what>
I am new to OCaml and wonder, whether there exists any noob-friendly
X-based IDE that is at least a bit like PyCharm. Termianl-based editors
and IDEs proved to be cumbersome and too shortcut-heavy in the past.
Has anyone seen such a beast?

I come from Python in need of more performance and already wrote some
tens of lines of code feeling that this language might be exactly what i
need to write the more performance-critical parts in (don't like C/C++).
      </cwn_what>
      <cwn_who>Francois Berenger replied</cwn_who>
      <cwn_what>
> I am new to OCaml and wonder, whether there exists any noob-friendly
> X-based IDE that is at least a bit like PyCharm. Termianl-based editors
> and IDEs proved to be cumbersome and too shortcut-heavy in the past.
> Has anyone seen such a beast?

Cf. this thread:

https://stackoverflow.com/questions/14747939/ide-for-ocaml-language

Personally, I feel emacs is the best supported environment for
OCaml programming.
      </cwn_what>
      <cwn_who>Jean-Marc Alliot then added</cwn_who>
      <cwn_what>
&gt; Personally, I feel emacs is the best supported environment for
&gt; OCaml programming. 

Agreed.
I have been using Merlin
https://github.com/the-lambda-church/merlin/wiki/emacs-from-scratch
inside emacs and found it a worthwhile addition.
      </cwn_what>
      <cwn_who>vrotaru also replied to the OP</cwn_who>
      <cwn_what>
You may try Atom editor with Nuclide extension (developed at Facebook for
internal uses, as I understand).
I also recommend the ocaml-indent and build extensions.

As soon as you have opam and atom installed it's as simple as:
$ opam install merlin ocamlbuild ocp-indent
$ apm install nuclide language-ocaml ocaml-indent build
      </cwn_what>
      <cwn_who>Ivan Gotovchits also replied</cwn_who>
      <cwn_what>
Sure we have! OCaml-top [1] is very newbie friendly and work out of box, ideal
for the first steps. Even a faster way to start is to try OCaml in your web
browser [2]. Once you feel yourself more comfortable in the language, you should
consider to switch to emacs, vim or sublime. They all have a nice integration
with OCaml, including intellisense like completion, code and doc lookup and
incremental typechecking.

[1]: https://www.typerex.org/ocaml-top.html
[2]: https://try.ocamlpro.com/
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other OCaml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Here are links from many OCaml blogs aggregated at OCaml Planet,
&lt;http://ocaml.org/community/planet/&gt;.

Catch the bug, walking through the stack
 &lt;https://hannes.nqsb.io/Posts/BadRecordMac&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
