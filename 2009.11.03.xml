<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2009.11.03</cwn_date>
    <cwn_prev>2009.10.27</cwn_prev>
    <cwn_next>2009.11.10</cwn_next>
    <cwn_date_text>October 27 to November 03, 2009</cwn_date_text>
  </cwn_head>
  <cwn_body>
		<cwn_entry>
			<cwn_title>forbidden construct as right hand side of "let rec"</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/a6696d235d8843a5#</cwn_url>
			<cwn_who>Mathias Kende and Lukasz Stafiniak asked, and Xavier Leroy answered</cwn_who>
			<cwn_what>
Mathias Kende wrote:
&gt; I need to write something like this :
&gt;
&gt;       let f f i = if i = 0 then 1 else i * f (i - 1)
&gt;       let rec g = f g
&gt;
&gt; Of course the compiler won't let me write it (even if the OCaml type
&gt; system is happy):
&gt;       "This kind of expression is not allowed as right-hand side of `let rec'"
In general, the best thing to do in this case is to switch to lazy
evaluation:

# let f f i = if i = 0 then 1 else i * Lazy.force f (i-1);;
val f : (int -&gt; int) Lazy.t -&gt; int -&gt; int = &lt;fun&gt;
# let rec g' = lazy (f g');;
val g' : (int -&gt; int) Lazy.t = &lt;lazy&gt;
# let g = Lazy.force g';;
val g : int -&gt; int = &lt;fun&gt;
# g 10;;
- : int = 3628800

Lukasz Stafiniak wrote:
&gt; While we are at it, what is the best way to convert a "straight" list
&gt; into a cyclic list?
&gt;
&gt; i.e. convert
&gt;
&gt; let l = a::b::[]
&gt;
&gt; into
&gt;
&gt; let rec l = a::b::l
&gt;
&gt; (for arbitrary length lists). (The answer I recall from the archives
&gt; was using Obj.magic to mutate the [] in the original list).

Obj.magic is not part of the OCaml language :-)

Again, you can do that just fine using lazy lists instead of lists:

type 'a lazylist = 'a lazylist_content Lazy.t
and 'a lazylist_content = Nil | Cons of 'a * 'a lazylist
			</cwn_what>
		</cwn_entry>
		<cwn_entry>
			<cwn_title>ocaml-gettext v0.3.3</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/ee192e030bf1e9b7#</cwn_url>
			<cwn_who>Sylvain Le Gall announced</cwn_who>
			<cwn_what>
General:
ocaml-gettext is a library that enables string translation in OCaml. The
API is based on GNU gettext. It comes with a tool to extract strings
which need to be translated from OCaml source files.

This enables OCaml program to output string in the native language of
the user, if a corresponding translation file of the English strings is
provided.

Changes:
v 0.3.3 is a bug fix release:
* compatible with ocaml-fileutils 0.4.0
* more static type-check of format string

Links:
http://le-gall.net/sylvain+violaine/ocaml-gettext.html
http://le-gall.net/sylvain+violaine/download/ocaml-gettext-0.3.3.tar.gz
			</cwn_what>
		</cwn_entry>
    <cwn_entry>
      <cwn_title>Other Caml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Thanks to Alp Mestan, we now include in the Caml Weekly News the links to the
recent posts from the ocamlcore planet blog at &lt;http://planet.ocamlcore.org/&gt;.

OCaml-gettext 0.3.3:
  &lt;http://caml.inria.fr/cgi-bin/hump.cgi?contrib=436&gt;

Itâ€™s coming:
  &lt;http://dutherenverseauborddelatable.wordpress.com/2009/11/01/its-coming/&gt;

Liquidsoap 0.9.2 is out !:
  &lt;http://blog.rastageeks.org/spip.php?article52&gt;

BlackBerry OS 5.0 and the Storm:
  &lt;http://feedproxy.google.com/~r/Skydeck/~3/gtTzD9h8p_s/blackberry-os5-storm&gt;

XML or S-expressions?:
  &lt;http://rwmj.wordpress.com/2009/10/30/xml-or-s-expressions/&gt;

ocamlbuild example repository:
  &lt;http://forge.ocamlcore.org/projects/obuild-examples/&gt;

New HLVM GC and LLVM 2.6 support:
  &lt;http://forge.ocamlcore.org/forum/forum.php?forum_id=449&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>