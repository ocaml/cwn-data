Hello,

Here is the latest OCaml Weekly News, for the week of June 21 to 28, 2016.

1) Pla v1.0 - pxx for making templates
2) ppx_deriving 4.0, ppx_deriving_yojson 3.0, ppx_deriving_protobuf 2.5
3) Other OCaml News

========================================================================
1) Pla v1.0 - pxx for making templates
Archive: <https://sympa.inria.fr/sympa/arc/caml-list/2016-06/msg00091.html>
------------------------------------------------------------------------
** Leonardo Laguna Ruiz announced:

Pla is a simple library and ppx syntax extension to create composable templates
based on verbatim strings.

You can find the code and a quick description of it?s features

<https://modlfo.github.io/pla/>

In a nutshell, the ppx transforms quoted strings in the form {pla| ?. |pla} to
templates. Inside templates it?s possible to add markers whose contents is
replaced by other templates, for example:

let name = Pla.string ?pla? ;;
let t = {pla|The library name is <#name#>|pla} ;;

will produce ?The library name is Pla?

When compiled, the markers are type-safe.

Pla does not provide advanced pretty-printing features but it produces fast
functions to create large amounts of text.
      
========================================================================
2) ppx_deriving 4.0, ppx_deriving_yojson 3.0, ppx_deriving_protobuf 2.5
Archive: <https://sympa.inria.fr/sympa/arc/caml-list/2016-06/msg00108.html>
------------------------------------------------------------------------
** whitequark announced:

I'm glad to announce new releases of ppx_deriving, ppx_deriving_protobuf
and ppx_deriving_yojson. They are already available via OPAM.

Changes:

ppx_deriving 4.0
----------------

  * Show, eq, ord, map, iter, fold: add support for `Result.result`.
  * Ppx_deriving.Arg: use Result.result instead of polymorphic variants.
  * Ppx_deriving.sanitize: parameterize over an opened module.
  * Add support for `[@@deriving]` in module type declarations.
  * Add support for loading findlib packages instead of just files in
    ppx_deriving_main.
  * Treat types explicitly qualified with Pervasives also as builtin.
  * Compatibility with statically linked ppx drivers.

ppx_deriving_protobuf 2.5
-------------------------

  * Compatibility with statically linked ppx drivers.

ppx_deriving_yojson 3.0
-----------------------

  * Use Result.result in generated code.
  * OCaml 4.03 compatibility.
  * Compatibility with statically linked ppx drivers.
      
========================================================================
3) Other OCaml News
------------------------------------------------------------------------
** From the ocamlcore planet blog:

Here are links from many OCaml blogs aggregated at OCaml Planet,
<http://ocaml.org/community/planet/>.

Full Time: Software Developer (Functional Programming) at Jane Street in New York, NY; London, UK; Hong Kong
 <http://jobs.github.com/positions/0a9333c4-71da-11e0-9ac7-692793c00b45>

Fourteenth OCaml compiler hacking evening at Citrix
 <http://ocamllabs.github.com/compiler-hacking/2016/06/26/summer-at-citrix>

Camlzip 1.06 released
 <http://forge.ocamlcore.org/forum/forum.php?forum_id=935>

Let syntax, and why you should use it
 <https://blogs.janestreet.com/let-syntax-and-why-you-should-use-it/>
      
========================================================================
Old cwn
------------------------------------------------------------------------

If you happen to miss a CWN, you can send me a message
(alan.schmitt@polytechnique.org) and I'll mail it to you, or go take a look at
the archive (<http://alan.petitepomme.net/cwn/>) or the RSS feed of the
archives (<http://alan.petitepomme.net/cwn/cwn.rss>). If you also wish
to receive it every week by mail, you may subscribe online at
<http://lists.idyll.org/listinfo/caml-news-weekly/> .

========================================================================


