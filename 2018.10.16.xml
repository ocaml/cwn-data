<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2018.10.16</cwn_date>
    <cwn_prev>2018.10.09</cwn_prev>
    <cwn_next>2018.10.23</cwn_next>
    <cwn_date_text>October 09 to 16, 2018</cwn_date_text>
    <cwn_extra_head></cwn_extra_head>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>Next OUPS meetup October 23rd 2018</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2018-10/msg00012.html</cwn_url>
      <cwn_who>Bruno Bernardo announced</cwn_who>
      <cwn_what>
The next OUPS meetup will take place on Tuesday, October 23, 7pm at IRILL
on the Jussieu campus. As usual, we will have a few talks, followed by
pizzas and drinks.

The talks will be the following:

- Jacques Garrigue, Lightweight linearly-typed programming with lenses   and monads
- Yann Régis-Gianas, Learn OCaml
- Gabriel Scherer, Porting the OCaml parser of the compiler from   ocamlyacc to Menhir

Please do note that we are always in demand of talk *proposals* for future
meetups.

To register, or for more information, go here:
https://www.meetup.com/ocaml-paris/events/255450340

*Registration is required! Access is not guaranteed after 7pm if
you're not registered.* (It also helps us to order the right amount of
food.)

Access map:\\
IRILL - Université Pierre et Marie Curie (Paris VI)\\
Barre 15-16 1er étage\\
4 Place Jussieu\\
75005 Paris\\
https://www.irill.org/pages/access.html

The meetup organizers.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Dune 1.4.0</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-dune-1-4-0/2712/1</cwn_url>
      <cwn_who>Rudi Grinberg announced</cwn_who>
      <cwn_what>
The dune team is pleased to announce the 1.4.0 release of Dune. The highlight of this release is the improved support for menhir, in particular the long awaited ~--infer~ flag. This seemingly small feature took quite a bit of coordination between the maintainers of dune and menhir. So I'd like to thank @fpottier for helping us out with this by adding better support for dune in menhir itself, and implementing the majority of the support in dune as well.

The rest of the release is mostly bug fixes, but one notable feature is that dune is now ~C-c~ friendly. Dune will now resume exactly where it's stopped after interruption instead of restarting the entire build.

Here is the full change log:

*** 1.4.0 (10/10/2018)

- Do not fail if the output of ~ocamlc -config~ doesn't include ~standard_runtime~ (#1326, @diml)

- Let ~Configurator.V1.C_define.import~ handle negative integers (#1334, @Chris00)

- Re-execute actions when a target is modified by the user inside ~_build~ (#1343, fix #1342, @diml)

- Pass ~--set-switch~ to opam (#1341, fix #1337, @diml)

- Fix bad interaction between multi-directory libraries the ~menhir~ stanza (#1373, fix #1372, @diml)

- Integration with automatic formatters (#1252, fix #1201, @emillon)

- Better error message when using ~(self_build_stubs_archive ...)~ and ~(c_names ...)~ or ~(cxx_names ...)~ simultaneously. (#1375, fix #1306, @nojb)

- Improve name detection for packages when the prefix isn't an actual package (#1361, fix #1360, @rgrinberg)

- Support for new menhir rules (#863, fix #305, @fpottier, @rgrinberg)

- Do not remove flags when compiling compatibility modules for wrapped mode (#1382, fix #1364, @rgrinberg)

- Fix reason support when using ~staged_pps~ (#1384, @charlesetc)

- Add support for ~enabled_if~ in ~rule~, ~menhir~, ~ocamllex~, ~ocamlyacc~ (#1387, @diml)

- Exit gracefully when a signal is received (#1366, @diml)

- Load all defined libraries recursively into utop (#1384, fix #1344, @rgrinberg)

- Allow to use libraries ~bytes~, ~result~ and ~uchar~ without ~findlib~ installed (#1391, @nojb)

- Take argument to self_build_stubs_archive into account. (#1395, @nojb)

- Fix bad interaction between ~env~ customization and vendored projects: when a vendored project didn't have its own ~env~ stanza, the ~env~ stanza from the enclosing project was in effect (#1408, @diml)

- Fix stop early bug when scanning for watermarks (#1423, @struktured)
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>State of OCaml and web assembly</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/state-of-ocaml-and-web-assembly/2725/1</cwn_url>
      <cwn_who>Carmelo Piccione asked</cwn_who>
      <cwn_what>
I spent some time studying various ways the OCaml compiler can produce web assembly and interpret or depend on other web assembly libraries. The landscape is quite confusing. Does anyone have experience with OCaml and web assembly? Is there a reliable project to bet on and start developing with? What about interop with other libraries that compile to wasm and you want to reference in OCaml? Here's a list of the projects I have discovered which seem relevant. Would appreciate insights on whether they are being maintained, or if anybody has noteworthy experience with them:

- ocamlrun-wasm: https://github.com/sebmarkbage/ocamlrun-wasm

  &gt; This is a build script for building the OCaml bytecode interpreter for WebAssembly using emscripten.

- wasm: https://opam.ocaml.org/packages/wasm/wasm.1.0/

  &gt; An OCaml library to read and write Web Assembly (wasm) files and manipulate their AST.

- cmm_of_wasm: http://simonjf.com/2018/08/27/cmm-of-wasm.html

  &gt; From WebAssembly to Native Code via the OCaml Backend.

- https://github.com/SanderSpies/ocaml/tree/wasm/wasmcomp

  &gt; A fork of the ocaml compiler with a web assembly compile target.

- grain: https://github.com/grain-lang/grain

  &gt; Grain is a language built for the modern web by leveraging the brilliant work done by the WebAssembly project.

  While grain is not actually OCaml it seems to be a fork of the OCaml codebase and thus worthy of mention.
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
