Hello,

Here is the latest Caml Weekly News, weeks 7 to 14 may, 2002. 

1) gmetadom (alias gdome2) released
2) gdome2-xslt released
3) lablgtkmathview released
4) generating random variables
5) Graphics without open_graph?
6) camomile-0.2.1
7) FFTW interface
8) "Functional Unparsing" benchmark results links fixed

======================================================================
1) gmetadom (alias gdome2) released
----------------------------------------------------------------------
Claudio Sacerdoti Coen announced:

Hi Ocamlers,

I am proud to announce the release of gmetadom (alias gdome2).

gmetadom is a binding to gdome2, the GNU DOM Level 2 implementation.

The code is automatically generated (by means of XSLT) from the
W3C DOM Level 2 Recomendation (Core and Events modules).
In this way making new bindings for new DOM modules is extremely quick
and easy. Moreover, the API is exactly the one proposed by W3C,
enhancing portability of already developed code.

Having a binding to gdome2 paves the way to the binding of other widgets
based on gdome2. In particular, bindings are already available for
the GtkMathView widget.

gmetadom:  http://sourceforge.net/projects/gmetadom/
gdome2:    http://phd.cs.unibo.it/gdome2

======================================================================
2) gdome2-xslt released
----------------------------------------------------------------------
Claudio Sacerdoti Coen announced:

Hi Ocamlers!

I am proud to announce the release of gdome2-xslt.

gdome2-xslt is a minimal API to apply XSLT stylesheets to gdome2
documents. It is based on libxslt (which is very performant) and requires
the gmetadom binding.

gdome2-xslt: http://www.cs.unibo.it/helm/gdome_xslt/index.html
gmetadom:    http://sourceforge.net/projects/gmetadom/

======================================================================
3) lablgtkmathview released
----------------------------------------------------------------------
Claudio Sacerdoti Coen announced:

Hi Ocamlers!

I am proud to announce the release of lablgtkmathview version 0.3.0.

lablgtkmathview is a lablgtk binding to GtkMathView, a fully compliant
widget to render MathML documents and print them to PostScript.

GtkMathView is based on gdome2. Hence lablgtkmathview input are
gdome2 (alias gmetadom) DOM trees, which can also be produced on-the-fly
using gdome2-xslt to apply XSLT stylesheets.

lablgtkmathview: http://www.cs.unibo.it/helm/mml-widget/index.html
gmetadom:        http://sourceforge.net/projects/gmetadom/

======================================================================
4) generating random variables
----------------------------------------------------------------------
Henri Dubois-Ferriere asked:

Hello,

For some simulation studies,  I need to generate exponential,   
gaussian, and poisson random variables. Maybe also some more exotic
ones a little later on.

I have looked around, but did not seem to find any available libraries
for generating random variables (except of course for the uniform
variables in Random). Can anyone point me to such a thing, if it   
exists?

David Chase answered:

Have you considered

    http://www.taygeta.com/random/gaussian.html

Google found it for me.  I don't know if that is
enough detail for you.

Olivier Andrieu also answered:

You could use GSL, the GNU scientific library
(http://sources.redhat.com/gsl/). It's written in C of course.

I've made some bindings (not for everything, but the RNGs and random
distributions are working). If you're interested, I can send you the
whole stuff.

and Shawn Wagner answered:

My Stew library (Available at http://raevnos.pennmush.org/code/ocaml.html)
includes some random number stuff. There are a few modules for random number
distributions (Functorized so you can use your choice of actual (P)RNG
generators with them; I like the Mersenne Twister, also part of the
library.), and I just added exponential and poisson distributions after
seeing your email. :)

======================================================================
5) Graphics without open_graph?
----------------------------------------------------------------------
Oliver Bandel asked and Pierre Weis answered:

> Interesting in the Graphics-Lib is, that the names of the
> graphics-functions are the same as in PostScript.
> It would be nice to have the possibility to directly
> write PostScript-Files with that Library too. :)
> 
> Ciao,
>    Oliver

Hi,

This possibility exists since 1 or 2 years with the Graphps module 
which is distributed in the Caml bazar.

Furthermore this library has a (tiny) website of its own!
(Have a look to http://pauillac.inria.fr/graphps/)

It is fully documented and can be used as a replacement of the
Graphics module; then your program will generate a postscript (or
encapsulated postscript file) instead of drawing on the screen.

Get the library at the used place, file graphps-1.0.tgz:

ftp.inria.fr/lang/caml-light/bazar-ocaml/

(Caml Light users may find it in .../bazar-cl/graphps/graphps-1.0.tgz)

Hence, with Graphps, a program using the Graphics library not only can
work without any window manager, but it can even work on a computer
without screen! (Not a crazy idea by the way: I've done it once to
generate images from home, telneting on an INRIA destop that was
running a program using graphps :)

The library is mature, but any new idea, remark, enhancement, or, even
better, any code contribution is warmly welcomed.

======================================================================
6) camomile-0.2.1
----------------------------------------------------------------------
Yamagata Yoriyuki announced:

Camomile-0.2.1 is released.

Ambition of Camomile project is to create multilingual (Unicode)
replacement of ocaml stdlib.  Currently, camomile provides

  * Unicode data types
  * Character info
  * Legacy encodings
  * Unicode Normalforms (NFC, NFKC, NFD, NFKD)
  * Case mappings
  * Sorting via Unicode Collation Algorithm.

For download and more information, see our home page.
    http://camomile.sourceforge.net

We would appreciate your feed back.

======================================================================
7) FFTW interface
----------------------------------------------------------------------
Christophe TROESTLER announced:

Dear caml riders,

I have started to write an interface to the FFTW library  
(http://www.fftw.org/).  It is available at

        http://www.umh.ac.be/math/an/programs.html

Since it uses the complex module and complex bigarrays, you need an
OCaml CVS version to compile it.  At the moment the 1D complex
transforms are usable as well as the import/export of wisdom.  All
comments are welcome -- in particular on the thread and callback
portions of the code.  I will try to complete the code ASAP.

and Markus Mottl answered:

A few weeks ago I played around with the FFTW and also wrote a small
interface. Due to lack of time I had to discontinue the project, but
maybe you can find one or the other idea in my code that you might want
to adopt. I have put the sources here:

  http://www.oefai.at/~markus/tmp

Writing an interface that supports all FFTW-features in a convenient way
is quite non-trivial. Maybe you want to place your project at SourceForge
so that others can also contribute some code.

======================================================================
8) "Functional Unparsing" benchmark results links fixed
----------------------------------------------------------------------
T. Kurt Bond announced and corrected:

I've fixed the broken links to postscript and PDF versions of the
results of benchmarking "Functional Unparsing" style output functions
against the equivalent O'Caml and C printf functions.     

I apologize for the inconvenience, and thank those who pointed out the
problem.

Earlier today I wrote:
> I've updated the software slightly and included the results and a
> short explanation (in postscript and PDF) on that page of some  
> benchmarking I did that shows that the Cpsio functions are faster than
> the equivalent OCaml printf functions in byte-code, and often faster
> in native-code, despite doing more garbage collecting.  Results are
> also compared to the equivalent C printf functions.
>    
> The web page again is:
> 
>     http://tkb.mpl.com/~tkb/software.html

======================================================================

Alan Schmitt
