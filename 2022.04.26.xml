<?xml version="1.0" encoding="utf-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2022.04.26</cwn_date>
    <cwn_prev>2022.04.19</cwn_prev>
    <cwn_next>2022.05.03</cwn_next>
    <cwn_date_text>April 19 to 26, 2022</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>Multicore OCaml: March 2022</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/multicore-ocaml-march-2022/9692/1</cwn_url>
      <cwn_who>Anil Madhavapeddy announced</cwn_who>
      <cwn_what>
Welcome to the March 2022 [Multicore OCaml](https://github.com/ocaml-multicore/ocaml-multicore) monthly report! This
update along with the [previous updates](https://discuss.ocaml.org/tag/multicore-monthly) have been compiled by me,
@ctk21, @kayceesrk and @shakthimaan.

We have continued steadily towards making a stable OCaml 5.0 release, as you can see from the long list of fixes
later -- thank you for all your contributions! Platform configurations that were formerly supported in the 4.x
branches for OpenBSD, FreeBSD, and NetBSD have now been re-enabled. ARM64 support (for macOS, Linux and the BSDs) is
stable in trunk, and ARM CFI integration has been merged as a follow-up to facilitate debugging and profiling.
Notably, this also includes [memory model tests for ARMv8 and Power
ports](https://github.com/ocaml/ocaml/pull/11004). The Windows mingw64 port is also working again in trunk.

An [effects tutorial](https://github.com/ocaml/ocaml/pull/11093) has also been contributed to the OCaml manual;
feedback continues to be welcome even after it's merged in.  As you experiment with effects, please do continue to
post to this forum with questions or comments about your learnings.

The Sandmark benchmark project has added bytecode analysis to address any performance regressions. We have also been
working on obtaining measurements for the compilation data points. The current-bench pipeline production deployments
has significant UI changes, and now has alert notifications for the benchmark runs.

As always, the Multicore OCaml open and completed tasks are listed first, which are then followed by the ecosystem
tooling projects. The Sandmark, sandmark-nightly, and current-bench project updates are finally presented for your
reference.

/Editor’s note: please find the full changelog following the archive link above./
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>OUPS meetup may 2022 (french only)</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/oups-meetup-may-2022-french-only/9715/1</cwn_url>
      <cwn_who>zapashcanon announced</cwn_who>
      <cwn_what>
Le prochain OUPS aura lieu le *jeudi 12 mai* 2022. Le rendez-vous est fixé à *19h* en *salle 15-16 101* , *4
place Jussieu* , 75005 Paris.

*L'inscription est obligatoire* pour pouvoir accéder au meetup ! Votre nom complet doit être disponible.
L'inscription s'effectue sur [meetup](https://www.meetup.com/fr-FR/ocaml-paris).

Toutes les informations sont disponibles sur [le site du oups](https://oups.frama.io).

J'aimerais aussi signaler que les slides et vidéos des exposés passés [sont maintenant
disponibles](https://oups.frama.io/past.html) ! :partying_face:

*Programme*

*** Gospel &amp; Ortac - Clément Pascutto

Gospel is a behavioural specification language for OCaml program. It provides developers with a non-invasive and
easy-to-use syntax to annotate their module interfaces with formal contracts that describe type invariants,
mutability, function pre-conditions and post-conditions, effects, exceptions, and [much
more](https://ocaml-gospel.github.io/gospel/)!

ortac: OCaml Runtime Assertion Checking.

*** MirageOS 4 - Romain Calascibetta

MirageOS 4 vient de sortir récemment et c'est l'occasion de (re)présenter ce projet permettant de construire des
unikernels. Nous y présenterons les nouvelles features et possibilités et nous ferons une introspection de 3 ans de
travail de l'équipe core.

*** Tezt: OCaml Tezos Test Framework - Romain Bardou

Tezt is a test framework for OCaml. It is well suited for unit and regression tests and particularly shines for
integration tests, i.e. tests that launch external processes. It was made with a focus on user experience. It allows
you to easily select tests from the command-line and provides pretty logs. It also can run tests in parallel,
automatically split the set of tests into several well-balanced batches to be run in parellel CI jobs, produce JUnit
outputs, and more. It has been in use at Nomadic for the last 2 years and is thus quite battle-tested.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>JFLA 2022: Call for Participation (in French)</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2022-04/msg00008.html</cwn_url>
      <cwn_who>Timothy Bourke announced</cwn_who>
      <cwn_what>
[ This message is intentionally written in French. It is a call for
participation for the "Francophone Days on Functional Languages" to be
held, finally and fingers crossed, at the end of June. Some of the
articles are written in English. They are available online:
https://hal.inria.fr/JFLA2022/ ]

*Merci de faire circuler : premier appel à participation*

     JFLA'2022 (http://jfla.inria.fr/jfla2022.html)

     Journées Francophones des Langages Applicatifs

     Saint-Médard-d'Excideuil - du 28 juin au 1er juillet 2022

Les inscriptions aux JFLA 2022 - en présence ! - sont désormais ouvertes :

https://www.azur-colloque.fr/DR04/inscription/preinscription/203/fr

Ces journées réunissent concepteurs, utilisateurs et théoriciens ;
elles ont pour ambition de couvrir les domaines des langages
applicatifs, de la preuve formelle, de la vérification de programmes,
et des objets mathématiques qui sous-tendent ces outils. Ces domaines
doivent être pris au sens large : nous souhaitons promouvoir les ponts
entre les différentes thématiques.

L'inscription est un forfait qui comprend notamment l'hébergement en
pension complète sur le site des journées :
- participant·e plein tarif, chambre simple : 660 euros
- étudiant·e orateur·ice, en chambre double : 0 euro

Nous espérons que vous serez nombreux à participer à ces journées.
Inscrivez-vous dès que possible ! En particulier, les étudiant·es
orateur·ices sont invité·es à s'inscrire, même s'ils ne paient pas
grâce à nos sponsors.

Vous pouvez d'ores et déjà vous inscrire au salon de discussion framateam afin
d'échanger ensemble :
https://framateam.org/signup_user_complete/?id=gnbebtncubnbpe96ok9kam8t9y

Tout le programme est à retrouver ici : http://jfla.inria.fr/jfla2022.html

*** Dates importantes
- 17 juin 2022 : date limite d'inscription aux journées
- 28 juin au 1er juillet 2022 : journées

*** Cours invités
- Delphine Demange (IRISA, Université de Rennes 1)
  "Si2-FIP: Programmation Fonctionnelle en Licence 1 avec Scala"

- Denis Mérigoux (Inria)
  "Rust pour le formaliste impatient"

*** Exposé invité
- Matthias Puech (INA GRM)
  Titre à venir - avec une surprise !

*** Articles acceptés
L'ensemble des articles acceptés est disponible sous forme d'une
collection HAL :
     https://hal.inria.fr/JFLA2022

*** Comité de programme

- Chantal Keller  LMF, Université Paris-Saclay    (Présidente)
- Timothy Bourke  Inria, ÉNS de Paris         (Vice-président)

- Sandrine Blazy          Irisa, Université Rennes 1
- Frédéric Bour           Tarides - Inria
- Guillaume Bury          OcamlPro
- Stefania Dumbrava       Samovar, ENSIIE, Télécom Sud Paris
- Diane Gallois-Wong      Nomadic Labs
- Adrien Guatto           IRIF, Université de Paris
- David Janin             LaBRI, Université de Bordeaux
- Marie Kerjean           LIPN, Université Paris 13
- Luc Pellissier          LACL, Université Paris-Est Créteil
- Mário Pereira           NOVA-LINCS, Universidade Nova de Lisboa
- Alix Trieu              Aarhus University
- Yannick Zakowski        LIP, Inria, ÉNS de Lyon
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
