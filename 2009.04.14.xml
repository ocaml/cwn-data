<?xml version="1.0" encoding="UTF-8"?>
<cwn>
	<cwn_head>
		<cwn_date>2009.04.14</cwn_date>
		<cwn_prev>2009.04.07</cwn_prev>
		<cwn_next>2009.04.21</cwn_next>
		<cwn_date_text>April 07 to 14, 2009</cwn_date_text>
	</cwn_head>
	<cwn_body>
		<cwn_entry>
			<cwn_title>Amthing - a multi-threaded GUI library</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/af09a302fa8ab70e#</cwn_url>
			<cwn_who>Ogasawara Satoshi announced</cwn_who>
			<cwn_what>
I'm please to announce the  first public release of Amthing, a multi-threaded 
GUI library for OCaml.

Features are:

- Multi-threaded design using Concurrent ML style message passing.
- Time-line animation and functional reactive sprite system.
- X11 Binding.
- 2D vector rendering by cairo.

Here's a "Hello world" example of Amthing.

 open Ccell 
 open Event
 open Amthing.Util.Persavatives

 module W = Amthing.Core.Window ( Amthing.XWindow )
 module K = Amthing.KeyCode
 module E = Amthing.WinEvent
 module S = Amthing.Sprite
 module C = Amthing.Component
 let wh = W.make  (Amthing.XWindow.default_parameter ()) 
 let tc = lazy (W.make_text_context wh)

 let _ =
   W.resize wh {| x = 0; y = 0; w = 200; h = 200 |};
   let hello =
     new S.label !$tc "hello world!"
       +&gt; S.set (`X 55.)
       +&gt; S.set (`Y 90.)
       +&gt; S.set (`Color Amthing.Color.blue)
       +&gt; C.make
   in
   W.add_visible wh hello;
   W.set_title wh "amthing hello world!";
   W.show wh;
   let main_loop () =
     match select [ Bcast.receive (W.event wh) ] with
       `KEY_PRESS input when E.key_code input = Some K._q -&gt;
	      W.close wh;
	      exit 0
     | #E.t -&gt; ()
   in
   forever main_loop ()


you can clone the repository from OCamlForge subversion :

 svn checkout svn://svn.forge.ocamlcore.org/svnroot/amthing

or view souce code on the web.

 http://forge.ocamlcore.org/plugins/scmsvn/viewcvs.php/trunk/?root=amthing
			</cwn_what>
		</cwn_entry>
	</cwn_body>
</cwn>