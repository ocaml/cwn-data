<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2019.01.15</cwn_date>
    <cwn_prev>2019.01.08</cwn_prev>
    <cwn_next>2019.01.22</cwn_next>
    <cwn_date_text>January 08 to 15, 2019</cwn_date_text>
    <cwn_extra_head></cwn_extra_head>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>Dune 1.6.3</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-dune-1-6-3/3138/1</cwn_url>
      <cwn_who>Rudi Grinberg announced</cwn_who>
      <cwn_what>
The dune team is pleased to announce the bug fix release of Dune 1.6.3. Normally, we don't bother announcing all bug fix releases, but this one contains quite a few fixes. I'd like to take this opportunity to encourage everyone to upgrade. Cheers.

*** 1.6.3 (08/01/2019)

- Fix merlin handling of private module visibility (#1653 @bobot)

- skip directories when looking up programs in the PATH (#1628, fixes #1616, @diml)

- Fix preprocessing for libraries with ~(include_subdirs ..)~ (#1624, fix #1626, @nojb, @rgrinberg)

- Do not generate targets for archive that don't match the ~modes~ field. (#1632, fix #1617, @rgrinberg)

- When executing actions, open files lazily and close them as soon as possible in order to reduce the maximum number of file descriptors opened by Dune (#1635, #1643, fixes #1633, @jonludlam, @rgrinberg, @diml)

- Do not generate targets for archive that don't match the ~modes~ field. (#1632, fix #1617, @rgrinberg)

- Get the correct environment node for multi project workspaces (#1648, @rgrinberg)

- Fix an issue causing menhir generated parsers to fail to build in some cases. The fix is to systematically use ~-short-paths~ when calling ~ocamlc -i~ (#1743, fix #1504, @diml)
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Working with bit-level data</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/working-with-bit-level-data/3094/4</cwn_url>
      <cwn_who>Following this thread, Anton Kochkov announced</cwn_who>
      <cwn_what>
Note, that I sent an initial draft of bitfields implementation in Cstruct library (for now only reading is supported) here https://github.com/mirage/ocaml-cstruct/pull/215

You are welcome to check out, and feedback/complaints/patches are welcome.
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
