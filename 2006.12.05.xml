<?xml version="1.0" encoding="UTF-8"?>
<cwn>
	<cwn_head>
		<cwn_date>2006.12.05</cwn_date>
		<cwn_prev>2006.11.28</cwn_prev>
		<cwn_next>2006.12.12</cwn_next>
		<cwn_date_text>November 28 to December 05, 2006</cwn_date_text>
	</cwn_head>
	<cwn_body>
		<cwn_entry>
			<cwn_title>Cameleon 1.9.17</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/b1cda4e0c8033b20/dada31cdcca62507#dada31cdcca62507</cwn_url>
			<cwn_who>Maxence Guesdon announced</cwn_who>
			<cwn_what>
I'm pleased to announce the release 1.9.17 of Cameleon. 

*** What is Cameleon ? 

Cameleon is a set of libraries and tools aiming to become an integrated 
development environment for OCaml. The libraries included are used by the 
tools but can be used for other projects. 
The interface is based on Lablgtk2. A description of each tool and library 
is available on the site. 

*** What's new ? 

A source code editor, called Chamo, was added. It can be fully configured 
and extended using OCaml code evaluated at run time (same as lisp for 
emacs). 
The FAQ about Chamo contains useful information: 
  http://home.gna.org/cameleon/faq.fr.html#faq:chamo 

*** Where is it available ? 

From the Cameleon web site: 
  http://home.gna.org/cameleon/
			</cwn_what>
		</cwn_entry>
		<cwn_entry>
			<cwn_title>Inotify binding</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/65b9e6b67afbb553/82de5c2e53096a47#82de5c2e53096a47</cwn_url>
			<cwn_who>Continuing the thread from last week, Aleksey Nogin said</cwn_who>
			<cwn_what>
Vincent Hanquez wrote: 
&gt; Richard Jones wrote: 
&gt; &gt; Vincent Hanquez wrote: 
&gt; &gt; &gt; I've made a small bindings for inotify, aka linux file system notification 
&gt; &gt; &gt; new subsystem. 
&gt; &gt; I think OMake includes bindings for gamin. 
&gt; it seems to be talking FAM. 

Actually, in our LibMojave (which is what OMake uses) we have bindings for: 
 - FAM 
 - Gamin (using either the generic FAM interface, or taking advantage of 
Gamin extensions) 
 - kqueue (FreeBSD, OS X) 
 - inotify (Linux) 
 - ??? (Win32) - not sure what exactly is used there 
In all five cases, we provide the _same_ fam-style interface on the 
OCaml side. We also have OMake autoconf-style scripts that can detect 
which of the fours notification mechanisms is present on a specific 
machine and use the appropriate one. 

&gt; Sounds more like a bad thing than a good thing to me. 
&gt; Direct inotify binding are much smaller/simpler anyway. 

That might be true, but only if you happen to be on a machine that 
provides inotify. We do utilize inotify if it is present, but we also 
have an option of using one of the other four when there is no inotify.
			</cwn_what>
		</cwn_entry>
		<cwn_entry>
			<cwn_title>json-wheel 1.0.0</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/a39c195bc770c38e/16f6d311b6f0561c#16f6d311b6f0561c</cwn_url>
			<cwn_who>Martin Jambon announced</cwn_who>
			<cwn_what>
json-wheel is an OCaml implementation of the JSON data interchange format, 
which can be considered as a lightweight alternative to XML. 

Authors: Mika Illouz, Martin Jambon 
License: BSD http://martin.jambon.free.fr/json-wheel-license.txt 
Homepage: http://martin.jambon.free.fr/json-wheel.html 
Documentation: http://martin.jambon.free.fr/json-wheel-doc/index.html 
Download: http://martin.jambon.free.fr/json-wheel.tar.gz 
GODI package: godi-json-wheel 

Understanding the origin of the name of this library is left as an 
exercise for the reader.
			</cwn_what>
		</cwn_entry>
		<cwn_entry>
			<cwn_title>reading audio</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_thread/thread/48c0df240b3fd244/468b3b67a66a077a#468b3b67a66a077a</cwn_url>
			<cwn_who>Vu Ngoc San asked and Eric Cooper answered</cwn_who>
			<cwn_what>
&gt; is there a library available for reading wav files in ocaml and, say,
&gt; convert it to a bigarray or something equivalent ?

I wrote one a few years ago as part of a little application to display
WAV files graphically:
    http://www.cs.cmu.edu/~ecc/gwav.tar.gz
			</cwn_what>
		</cwn_entry>
	</cwn_body>
</cwn>