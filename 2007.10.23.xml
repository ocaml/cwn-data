<?xml version="1.0" encoding="UTF-8"?>
<cwn>
	<cwn_head>
		<cwn_date>2007.10.23</cwn_date>
		<cwn_prev>2007.10.16</cwn_prev>
		<cwn_next>2007.10.30</cwn_next>
		<cwn_date_text>October 16 to 23, 2007</cwn_date_text>
	</cwn_head>
	<cwn_body>
		<cwn_entry>
			<cwn_title>pa_oo and pa_polymap for 3.10</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_frm/thread/b295006a4b3cb0c3/b8f65366ff33d2f5#b8f65366ff33d2f5</cwn_url>
			<cwn_who>Jacques Garrigue announced</cwn_who>
			<cwn_what>
I've just added versions of pa_oo and pa_polymap working with 3.10. 
Sorry for the long delay... 

http://www.math.nagoya-u.ac.jp/~garrigue/code/ocaml.html
			</cwn_what>
		</cwn_entry>
		<cwn_entry>
			<cwn_title>Sexplib now available for OCaml 3.10</cwn_title>
			<cwn_url>http://groups.google.com/group/fa.caml/browse_frm/thread/6d87dd2e32378d45/7357515c6ebe3223#7357515c6ebe3223</cwn_url>
			<cwn_who>Markus Mottl announced</cwn_who>
			<cwn_what>
I am happy to announce that the Sexplib library has been ported to OCaml 3.10: 

 http://ocaml.info/home/ocaml_sources.html#sexplib310 

It now depends on the type-conv library, which factors out common 
functionality for future type conversion libraries (e.g. an upcoming 
type-safe and extremely efficient binary protocol library): 

 http://ocaml.info/home/ocaml_sources.html#type-conv 

Sexplib is also available through Godi, which will automatically 
resolve the dependency on type-conv. 

The new release also comes with several bug fixes, performance 
improvements and small feature extensions. 

Here is a short description of Sexplib (from the README): 

 This library contains functionality for parsing and pretty-printing 
 S-expressions. In addition to that it contains an extremely useful 
 preprocessing module for Camlp4, which can be used to automatically 
 generate code from type definitions for efficiently converting OCaml-values 
 to  S-expressions and vice versa. In combination with the parsing and 
 pretty-printing functionality this frees users from having to write their own 
 I/O-routines for datastructures they define. Possible errors during automatic 
 conversions from S-expressions to OCaml-values are reported in a very 
 human-readable way. Another module in the library allows you to extract and 
 replace sub-expressions in S-expressions.
			</cwn_what>
		</cwn_entry>
	</cwn_body>
</cwn>