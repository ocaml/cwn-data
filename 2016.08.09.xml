<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2016.08.09</cwn_date>
    <cwn_prev>2016.08.02</cwn_prev>
    <cwn_next>2016.08.16</cwn_next>
    <cwn_date_text>August 02 to 09, 2016</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>Make OCaml library available to Java</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-08/msg00016.html</cwn_url>
      <cwn_who>Deep in this thread, Hendrik Boom asked and Jeremy Yallop replied</cwn_who>
      <cwn_what>
&gt; There's soomething I've been wondering about.  OCaml keeps a minimum
&gt; of type information at run-time -- one bit in each machine word tells
&gt; whether it's a pointer or not.  Is OCaml's intermediate code stable
&gt; enough that it could be used as intermediate code for another
&gt; language, and compiled further using the usual OCaml toolchain?

That's the goal of the malfunction project:

   https://github.com/stedolan/malfunction
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>OCaml-Fiddle (try OCaml everywhere)</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2016-08/msg00018.html</cwn_url>
      <cwn_who>Hongbo Zhang announced</cwn_who>
      <cwn_what>
We are glad to announce the beta release of OCaml-Fiddle
(&lt;https://bloomberg.github.io/bucklescript/js-demo/&gt;), where you can write OCaml
snippet, run it in the browser and share with other people (by share button).

It also accept gist id in the format:
https://bloomberg.github.io/bucklescript/js-demo/?gist=gist_id

It is powered by BuckleScript and JSOO
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other OCaml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Here are links from many OCaml blogs aggregated at OCaml Planet,
&lt;http://ocaml.org/community/planet/&gt;.

Hask is not a category
 &lt;http://math.andrej.com/2016/08/06/hask-is-not-a-category/&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
