                          ━━━━━━━━━━━━━━━━━━━
                           OCAML WEEKLY NEWS
                          ━━━━━━━━━━━━━━━━━━━


[Previous Week] [Up] [Next Week]

Hello

Here is the latest OCaml Weekly News, for the week of June 10 to 17,
2025.

Table of Contents
─────────────────

Help Test the New Odoc-3-Powered Package Documentation Pages
Dune 3.19
CFP - JFLA 2026 - Journées Francophones des Langages Applicatifs
Other OCaml News
Old CWN


[Previous Week] <https://alan.petitepomme.net/cwn/2025.06.10.html>

[Up] <https://alan.petitepomme.net/cwn/index.html>

[Next Week] <https://alan.petitepomme.net/cwn/2025.06.24.html>


Help Test the New Odoc-3-Powered Package Documentation Pages
════════════════════════════════════════════════════════════

  Archive:
  <https://discuss.ocaml.org/t/help-test-the-new-odoc-3-powered-package-documentation-pages/16795/1>


Paul-Elliot announced
─────────────────────

  We're in the process of deploying odoc 3 on the package documentation
  pipeline that underpins the package documentation pages at
  <https://ocaml.org/packages>.

  We've prepared [a patch for OCaml.org] that renders the packages'
  documentation pages with the new odoc 3 features. Before deploying
  this on the production version of the OCaml.org website, we're looking
  for community feedback on the updated package documentation pages now
  available on staging.ocaml.org :tada:.

  Some of the new odoc 3 features benefit all packages!
  • The docs CI is now using a new driver, with *many more docs being
    built*. Compare the docs for yojson in the [old] and [new] CI!
  • The docs now features a *"source" link* next to most items, taking
    you to a rendered version of the source code. For instance, if you
    wonder how the [`List.sort_uniq'] function is implemented, click on
    the source link next to it!
  • The *sidebar and breadcrumbs*, which were previously hacked together
    by ocaml.org, are now properly generated by odoc. Compare odoc's
    [old] and [new] sidebar!
  • The URL layout has been updated to include the library names, with
    redirections to avoid dead links.

  Some other new features opens new possibility for documentation
  authors! They are mostly unused as their support is so recent, but you
  can test then on odoc's docs:
  • Ocaml.org now allows to reference other packages modules and pages!
    For instance, `odoc-driver''s doc, in [its introduction], references
    a page from sherlodoc's doc! It's as simple as [this syntax].
  • Medias, such as images, finally work on ocaml.org. This requires
    using the special syntax that is so new that, currently, only odoc's
    cheatsheet is [using]. But since we made sure to be compatible with
    odig's convention, images now work for several packages: compare
    Vg's tutorial [before] and [after]!

  How to help:
  • Test browsing package documentation on staging.ocaml.org
  • Report any bugs you encounter (even if it's just a small visual
    issue)

  Your testing helps ensure a smooth transition when these improvements
  go live. Thanks for helping us!

  The ocaml.org and odoc maintainers


[a patch for OCaml.org] <https://github.com/ocaml/ocaml.org/pull/3124>

[old] <https://ocaml.org/p/yojson/latest>

[new] <https://staging.ocaml.org/p/yojson/latest>

[`List.sort_uniq']
<https://staging.ocaml.org/p/ocaml-compiler/5.3.0/doc/stdlib/Stdlib/List/index.html#val-sort_uniq>

[old] <https://ocaml.org/p/odoc/latest/doc/index.html>

[new] <https://staging.ocaml.org/p/odoc/latest/doc/index.html>

[its introduction]
<https://staging.ocaml.org/p/odoc-driver/latest/doc/index.html#introduction>

[this syntax]
<https://github.com/ocaml/odoc/blob/master/doc/driver/index.mld#L20>

[using]
<https://staging.ocaml.org/p/odoc/3.0.0/doc/cheatsheet.html#:~:text={image!>

[before] <https://ocaml.org/p/vg/0.9.5/doc/tutorial.html>

[after] <https://staging.ocaml.org/p/vg/0.9.5/doc/tutorial.html>


Dune 3.19
═════════

  Archive: <https://discuss.ocaml.org/t/ann-dune-3-19/16693/2>


Etienne Marais announced
────────────────────────

  The Dune Team is glad to announce the release of Dune `3.19.1'
  :vulcan_salute:

  This patch release contains a fix reverting some regressions on how
  `dune exec' handles processes. It restores the previous behaviour.

  If you encounter a problem with this release, you can report it on the
  [ocaml/dune] repository.


[ocaml/dune] <https://github.com/ocaml/dune/issues>

Changelog
╌╌╌╌╌╌╌╌╌

◊ Fixed

  • Revert changes in `dune exec' behaviour introduced in
    3.19.0. (#11879, fixes #11870, #11867 and #11881, @Alizter)


CFP - JFLA 2026 - Journées Francophones des Langages Applicatifs
════════════════════════════════════════════════════════════════

  Archive:
  <https://discuss.ocaml.org/t/cfp-jfla-2026-journees-francophones-des-langages-applicatifs/16804/1>


Marie Kerjean announced
───────────────────────

  This message is intentionally written in French. It is a call for
  papers for the “Francophone Days on Functional Languages” to be held
  at the end of January 2026 in the Northern Vosges. Papers can be
  written in English, but the presentations themselves are expected to
  be given in French.

  Merci de faire circuler : premier appel à communications

  JFLA 2026 : Journées Francophones des Langages Applicatifs
  <http://jfla.inria.fr/jfla2026.html>

  27 janvier au 30 janvier 2026

  Hôtellerie du Couvent

  Les 37èmes Journées Francophones des Langages Applicatifs (JFLA) se
  tiendront dans les Vosges du Nord, à Oberbronn (Bas-Rhin), du mardi 27
  janvier 2026 au vendredi 30 janvier 2026.

  Les JFLA réunissent concepteur·rices, utilisateur·rices et
  théoricien·nes ; elles ont pour ambition de couvrir les domaines des
  langages applicatifs, de la preuve formelle, de la vérification de
  programmes, et des objets mathématiques qui sous-tendent ces
  outils. Ces domaines doivent être pris au sens large : nous souhaitons
  promouvoir les ponts entre les différentes thématiques.

  • Langages fonctionnels et applicatifs : sémantique, compilation,
    optimisation, typage, extensions à d'autres paradigmes.

  • Assistants de preuve : implémentation, nouvelles tactiques,
    développements présentant un intérêt théorique, technique ou
    méthodologique.

  • Logique, correspondance preuve-programme, réalisabilité, extraction
    de programmes, modèles.

  • Spécification, prototypage, développements formels d'algorithmes.

  • Vérification de programmes ou de modèles, vérification déductive,
    interprétation abstraite, raffinement.

  • Utilisation industrielle des langages fonctionnels et applicatifs,
    ou des méthodes issues de la communauté scientifique. Outils et
    plateformes pour le web.

  • Enseignement ou diffusion des langages fonctionnels et
    applicatifs. Environnements et méthodes de développement, retours
    d'expérience.

  Les articles soumis aux JFLA sont relus par au moins deux personnes
  s'ils sont acceptés, et au moins trois personnes s'ils sont rejetés.
  Les critiques du comité de programme sont toujours bienveillantes et
  la plupart du temps encourageantes et constructives, même en cas de
  rejet.

  Il n'y a donc pas de raison de ne pas soumettre aux JFLA !

  DATES IMPORTANTES

  /!\ Attention : les dates limites sont fermes et définitives.  Il n'y
      aura pas d'extension. /!\

  • Soumission des résumés et articles : 16 octobre 2025, GMT+2
  • Notification aux auteurs et autrices : 2 décembre 2025, GMT+2
  • Version finale des articles : 16 décembre 2025, GMT+2

  SOUMISSIONS

  Nous acceptons deux types de soumissions :

  • Article de recherche (18 pages max.) portant sur des travaux
    originaux. Nous acceptons des travaux en cours, pour lesquels
    l'aspect recherche n'est pas entièrement finalisé. Nous encourageons
    aussi la soumission d'articles présentant avec élégance un résultat
    connu sous un angle nouveau.

  • Article court (9 pages max.) décrivant un problème particulier, les
    pistes en cours d'investigation, et visant à rechercher de l'aide de
    la part de la communauté. Les articles courts peuvent également
    présenter de manière synthétique et cohérente des résultats déjà
    publiés. Enfin, ils peuvent présenter un outil logiciel dont
    l'exposé constituera une démonstration.

  CONSIGNES AUX AUTEURS ET AUTRICES

  Les articles peuvent être rédigés en français ou en anglais.

  La forme de l'article doit être soignée, et le contenu rédigé de
  manière structurée et claire.

  Le style LaTeX jflart doit impérativement être utilisé sans
  modification de la mise en page. Le style LaTeX et sa documentation
  sont disponibles depuis le site web de la conférence.

  Les limites de pages sont strictes. Les références bibliographiques ne
  sont pas comptabilisées dans la limite de pages. Les annexes aux
  articles ne sont pas autorisées.

  Les auteurs et autrices peuvent soumettre du matériel supplémentaire,
  séparé de l'article soumis, sous forme de texte (version longue, sans
  limite de pages) et/ou de développement logiciel. L'évaluation de ce
  matériel supplémentaire est à la discrétion du comité de
  programme. Les articles soumis doivent donc être auto-contenus et
  évaluables sans ce matériel supplémentaire.

  Les soumissions parallèles dans d'autres conférences, journaux ou
  workshops avec actes ne sont pas autorisées.

  Les membres du comité de programme sont autorisés à soumettre un
  article. Les présidentes du comité ne le sont pas.

  Les articles doivent être soumis via le site :
  <https://jfla2026.hotcrp.com>

  L'évaluation des articles suit un processus en simple-aveugle : les
  rapports des articles sont anonymes, mais pas les auteurs et autrices.

  Les articles acceptés seront publiés dans les actes de la conférence,
  sur HAL, et les auteurs et autrices en donneront une présentation lors
  des journées. Les présentations seront, de préférence, données en
  français.

  Marie KERJEAN et Yannick ZAKOWSKI JFLA 2026


Other OCaml News
════════════════

From the ocaml.org blog
───────────────────────

  Here are links from many OCaml blogs aggregated at [the ocaml.org
  blog].

  • [Introducing OxCaml]
  • [Under the hood with Apple's new Containerization framework]


[the ocaml.org blog] <https://ocaml.org/blog/>

[Introducing OxCaml] <https://blog.janestreet.com/introducing-oxcaml/>

[Under the hood with Apple's new Containerization framework]
<https://anil.recoil.org/notes/apple-containerisation>


Old CWN
═══════

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  to the [caml-list].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <https://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <https://alan.petitepomme.net/cwn/cwn.rss>

[caml-list] <https://sympa.inria.fr/sympa/info/caml-list>

[Alan Schmitt] <https://alan.petitepomme.net/>
