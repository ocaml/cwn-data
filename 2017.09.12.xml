<?xml version="1.0" encoding="UTF-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2017.09.12</cwn_date>
    <cwn_prev>2017.09.05</cwn_prev>
    <cwn_next>2017.09.19</cwn_next>
    <cwn_date_text>September 05 to 12, 2017</cwn_date_text>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>BAP v1.3</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2017-09/msg00016.html</cwn_url>
      <cwn_who>Ivan Gotovchits announced</cwn_who>
      <cwn_what>
The [Binary Analysis Platform][1] is a reverse engineering and program
analysis platform that targets binaries, i.e., compiled programs without
the source code. BAP supports multiple architectures (more than 30), though
the first tier architectures are x86, x86-64, and ARM. BAP operates by
disassembling and lifting the binary code into the RISC-like BAP
Instruction Language (BIL). Thus the analysis implemented in BAP is
architecture independent in a sense that it will work equally well for all
the supported architectures. The platform comes with a set of tools,
libraries, and plugins. The main purpose of BAP is to provide a toolkit for
automated program analysis. BAP is written in OCaml and it is the preferred
language to write analysis, though we have bindings to C, Python, and Rust.

The v1.3 release is the 13th and the biggest public release in the history
of BAP, that brings lots of new stuff, including:

* New OGRE loader that works smoothly with all sorts of the binaries,
including Linux and Darwin kernel modules, shared libraries, and other
peculiar program representations
* Memory consumption is reduced several times (special thanks to the
Spacetime team)
* Primus - the CPU emulation and microexecution framework
* Better and more concise program representation, thanks to the dead code
elimination pass with effect analysis
* Support for LLVM 4.0

See also the Discuss [thread][2] for the further discussions.


[1]: https://github.com/BinaryAnalysisPlatform/bap
[2]: https://discuss.ocaml.org/t/ann-bap-v1-3-release/829
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Monads Library</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2017-09/msg00017.html</cwn_url>
      <cwn_who>Ivan Gotovchits announced</cwn_who>
      <cwn_what>
We are doing [program analysis][3] in CMU, Cylab, and thus we deal a lot
with computations. Since monads naturally denote computations, we finally
ended up with our own library of monads. Here are the most notable features
our library:

1. The library is thoroughly [documented][2];
2. The monad interface is very rich with more than a hundred of functions;
3. Provides monad transformers for 12 Monads;
4. A non-restrictive license (MIT).

The Monads library is developed by the BAP Team and is released as a part
of the [BAP v1.3 release][4]. It can be installed from opam with `opam
install monads`. Please, report any bugs to the BAP [issue tracker][1].
Pull request are always welcome!

P.S.  If you don't feel comfortable in the presence of monads, try our
[tutorial][5], maybe it will help you to get along with them.

See also the Discuss [thread][6] for further info.

[1]: https://github.com/BinaryAnalysisPlatform/bap/issues
[2]: http://binaryanalysisplatform.github.io/bap/api/v1.3.0/Monads.Std.html
[3]: https://github.com/BinaryAnalysisPlatform/bap
[4]: https://discuss.ocaml.org/t/ann-bap-v1-3-release/829
[5]:
http://binaryanalysisplatform.github.io/bap/api/v1.3.0/Monads.Std.html#intro
[6]:
https://discuss.ocaml.org/t/ann-monads-the-missing-monad-transformers-library/830
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Tezos Recrute</cwn_title>
      <cwn_url>https://sympa.inria.fr/sympa/arc/caml-list/2017-09/msg00023.html</cwn_url>
      <cwn_who>Jill Carlson announced</cwn_who>
      <cwn_what>
Tezos est une blockchain et une platforme de contrats-intelligents
développée (en OCaml bien sur) depuis quelques années. La fondation Tezos,
basée en Suisse, à récemment conclu une levée de fond lui permettant de
financer son dévelopement et sa recherche pour de nombreuses années à
venir. Nous cherchons des ingénieurs à Paris (dans un premier temps) pour
rejoindre le projet. Les problématiques en jeu sont variées, allant de la
programmation de réseaux pair à pairs, de la construction de langages de
programmation, ou de la conception d'algorithmes distribués à la
cryptographie. Nous cherchons plusieurs types de profils, mais tout
particulièrement des doctorants ou postdoc ayant un fort interêt pour OCaml
et/ou le domaine des blockchains. Compensation compétitive.

Si vous êtes intéressé, envoyez un CV à careers@tezos.com.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>From the OCaml discourse</cwn_title>
      <cwn_who>The editor compiled this list</cwn_who>
      <cwn_what>
Here are some links to messages at &lt;http://discuss.ocaml.org&gt; that may
be of interest to the readers.

- Christophe talks about "First release of Moss"
  &lt;https://discuss.ocaml.org/t/ann-first-release-of-moss/814/1&gt;
- Thomas Leonard talks about "capnp-rpc 0.2 - persistence, encryption and access control"
  &lt;https://discuss.ocaml.org/t/ann-capnp-rpc-0-2-persistence-encryption-and-access-control/826/1&gt;
- ALIENQuake talks about "I'm looking for OCaml developer for paid code contributions"
  &lt;https://discuss.ocaml.org/t/im-looking-for-ocaml-developer-for-paid-code-contributions/827/1&gt;
- Marshall Abrams talks about "Interim report on experience with ocamlnat"
  &lt;https://discuss.ocaml.org/t/interim-report-on-experience-with-ocamlnat/833/1&gt;
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Ocaml Github Pull Requests</cwn_title>
      <cwn_who>Gabriel Scherer and the editor compiled this list</cwn_who>
      <cwn_what>
Here is a sneak peek at some potential future features of the Ocaml
compiler, discussed by their implementers in these Github Pull Requests.

- Reimplement Unix.isatty on Windows
  https://github.com/ocaml/ocaml/pull/1321
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Other OCaml News</cwn_title>
      <cwn_who>From the ocamlcore planet blog</cwn_who>
      <cwn_what>
Here are links from many OCaml blogs aggregated at OCaml Planet,
&lt;http://ocaml.org/community/planet/&gt;.

Full Time: Software Developer (Functional Programming) at Jane Street in New York, NY; London, UK; Hong Kong
 &lt;http://jobs.github.com/positions/0a9333c4-71da-11e0-9ac7-692793c00b45&gt;

Coq 8.7 beta 1 is out
 &lt;https://coq.inria.fr/news/137.html&gt;
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
