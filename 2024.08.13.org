#+OPTIONS: ^:nil
#+OPTIONS: html-postamble:nil
#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+OPTIONS: author:nil
#+HTML_HEAD: <style type="text/css">#table-of-contents h2 { display: none } .title { display: none } .authorname { text-align: right }</style>
#+HTML_HEAD: <style type="text/css">.outline-2 {border-top: 1px solid black;}</style>
#+TITLE: OCaml Weekly News
[[https://alan.petitepomme.net/cwn/2024.08.06.html][Previous Week]] [[https://alan.petitepomme.net/cwn/index.html][Up]] [[https://alan.petitepomme.net/cwn/2024.08.20.html][Next Week]]

Hello

Here is the latest OCaml Weekly News, for the week of August 06 to 13, 2024.

#+TOC: headlines 1


* MlFront - A Java-like package system for OCaml
:PROPERTIES:
:CUSTOM_ID: 1
:END:
Archive: https://discuss.ocaml.org/t/ann-mlfront-a-java-like-package-system-for-ocaml/15072/4

** Continuing this thread, jbeckford announced


I've added a third post: [[https://diskuv.com/mlfront/overview-3/][https://diskuv.com/mlfront/overview-3/]]

In it I describe a small but useful /reference build system/ for MlFront which can take packages like:

#+begin_example
.
├── AcmeWidgets_Std/
│   └── A.ml
└── BobBuilder_Std/
    └── B.ml
#+end_example

and produce standalone build scripts that can be committed to source control:

#+begin_src shell
$ mlfront-boot -native -o buildscript

$ ./buildscript.sh # .\buildscript.cmd is also created

$ target/BobBuilder_Std.B
I am an A!
I am a B!
#+end_src

On a related note, I've begun to implement a small part of https://gallium.inria.fr/~scherer/namespaces/spec.pdf. It is not strictly required but [[https://gitlab.com/dkml/build-tools/MlFront/-/blob/f1f6e6d073500febb5c9e429212c8bdaaa177c35/src/MlFront_Codept/Namespaces.mli][Namespaces.mli]] will be very helpful for upgrading existing projects to ~MlFront~-style packages without changing code. That will be for a future (not soon) post.
      



* First release of hector
:PROPERTIES:
:CUSTOM_ID: 2
:END:
Archive: https://discuss.ocaml.org/t/ann-first-release-of-hector/15099/1

** François Pottier announced


It is my pleasure to announce the first release of ~hector~, an OCaml library that offers /vectors/ (also known as dynamic arrays, or resizeable arrays).

To install it, type ~opam update && opam install hector~.

~hector~ offers *polymorphic vectors*, where the type of the elements is a parameter, *monomorphic vectors*, where the type of the elements is fixed, and *integer vectors*, a special case of monomorphic vectors.

~hector~'s vectors are *not thread-safe* and *do not include a protection against memory leaks*. Compared with the ~Dynarray~ module in OCaml's standard library, ~hector~'s polymorphic and monomorphic vectors are *slightly faster*, and ~hector~'s integer vectors are *significantly faster*. ~hector~ offers fast (but dangerous) *unsafe access operations*, namely ~unsafe_get~, ~unsafe_set~, and ~unsafe_borrow~. For a more detailed overview, see the [[https://cambium.inria.fr/~fpottier/hector/doc/hector/][documentation]].
      



* Dune dev meeting
:PROPERTIES:
:CUSTOM_ID: 3
:END:
Archive: https://discuss.ocaml.org/t/ann-dune-dev-meeting/14994/9

** Continuing this thread, Marek Kubica announced


Thanks for everyone who joined today! The [[https://github.com/ocaml/dune/wiki/dev-meeting-2024-08-07][meeting minutes]] are online and the next meeting will be in two weeks, 21st of August at 10:00 (AM) CEST.
      



* Other OCaml News
:PROPERTIES:
:CUSTOM_ID: 4
:END:
** From the ocaml.org blog


Here are links from many OCaml blogs aggregated at [[https://ocaml.org/blog/][the ocaml.org blog]].

- [[https://frama-c.comhttps//link.springer.com/book/10.1007/978-3-031-55608-1][The Guide to Software Verification with Frama-C is available]]
      



* Old CWN
:PROPERTIES:
:UNNUMBERED: t
:END:

If you happen to miss a CWN, you can [[mailto:alan.schmitt@polytechnique.org][send me a message]] and I'll mail it to you, or go take a look at [[https://alan.petitepomme.net/cwn/][the archive]] or the [[https://alan.petitepomme.net/cwn/cwn.rss][RSS feed of the archives]].

If you also wish to receive it every week by mail, you may subscribe to the [[https://sympa.inria.fr/sympa/info/caml-list][caml-list]].

#+BEGIN_authorname
[[https://alan.petitepomme.net/][Alan Schmitt]]
#+END_authorname
