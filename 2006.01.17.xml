<?xml version="1.0" encoding="ISO-8859-15"?>
<cwn>
<cwn_head>
  <cwn_date>2006.01.17</cwn_date>
  <cwn_prev>2006.01.10</cwn_prev>
  <cwn_next>2006.01.24</cwn_next>
  <cwn_date_text>10 to 17 January, 2006</cwn_date_text>
</cwn_head>
<cwn_body>
  <cwn_entry>
    <cwn_title>Pickling for OCaml?</cwn_title>
    <cwn_url>http://thread.gmane.org/gmane.comp.lang.caml.general/31881</cwn_url>
    <cwn_who>Continuing the thread from last week, Jonathan Roewen announced</cwn_who>
    <cwn_what>
Well, in the meantime, we've ported most of the pickling library from
SML.NET to work with O'Caml. Supports most of the basic types
(int,bool,char,string,list,array,unit,pairs-&gt;sextuples) and a few
combinators (alttag, wrap, lift,seq).

Fairly easy to define a pickler:

module BytePickle = Pickle.CorePickle(Pickle.ByteCodec)
open BytePickle

let pickler = pair (string list,int)

let data = pickle pickler (["hello";"world"],-1)

let value = unpickle pickler (List.rev data)

Files at http://devnulled.ath.cx/svn/dst/trunk/kernel/pickle.ml &amp;
http://devnulled.ath.cx/svn/dst/trunk/kernel/pickle.mli
    </cwn_what>
  </cwn_entry>
  <cwn_entry>
    <cwn_title>Marching Tetrahedra</cwn_title>
    <cwn_url>http://thread.gmane.org/gmane.comp.lang.caml.general/31943</cwn_url>
    <cwn_who>Chris Campbell announced</cwn_who>
    <cwn_what>
I took some of my code for implicit surface drawing from a while back,
tidied it up and decided to release it.  It's based on J. Blooms
polygonizer.

I'm working on organising my site, so it's only described in following
blog post.  Hopefully it'll have it's own page soon.

http://www.morbid-incantations.co.uk/node/2

Direct download http://www.morbid-incantations.co.uk/files/sucellos.tar.gz
    </cwn_what>
  </cwn_entry>
  <cwn_entry>
    <cwn_title>A bunch of ocaml programs</cwn_title>
    <cwn_url>http://thread.gmane.org/gmane.comp.lang.caml.general/31946</cwn_url>
    <cwn_who>Philippe Narbel announced</cwn_who>
    <cwn_what>
just to announce that i made available large samples
of the programs that appear in my text about ocaml:

http://dept-info.labri.u-bordeaux.fr/~narbel/PFGO/index_sources.html

feel free to experiment and to make comments.
    </cwn_what>
  </cwn_entry>
</cwn_body>
</cwn>
