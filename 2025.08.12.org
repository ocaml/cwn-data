#+OPTIONS: ^:nil
#+OPTIONS: html-postamble:nil
#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+OPTIONS: author:nil
#+HTML_HEAD: <style type="text/css">#table-of-contents h2 { display: none } .title { display: none } .authorname { text-align: right }</style>
#+HTML_HEAD: <style type="text/css">.outline-2 {border-top: 1px solid black;}</style>
#+TITLE: OCaml Weekly News
[[https://alan.petitepomme.net/cwn/2025.08.05.html][Previous Week]] [[https://alan.petitepomme.net/cwn/index.html][Up]] [[https://alan.petitepomme.net/cwn/2025.08.19.html][Next Week]]

Hello

Here is the latest OCaml Weekly News, for the week of August 05 to 12, 2025.

#+TOC: headlines 1


* Slipshow!
:PROPERTIES:
:CUSTOM_ID: 1
:END:
Archive: https://discuss.ocaml.org/t/ann-slipshow/16337/9

** Paul-Elliot announced


It is with some /bitter/ joy that I‚Äôm announcing the 0.4.1 version of Slipshow [[https://github.com/ocaml/opam-repository/pull/28181][on opam]]:

*** The slides strike back

The main improvements of this version are the introduction of arguments to actions, a frontmatter, and improvements to slides.

All together, they allow to easily design presentations the slides way:

https://github.com/user-attachments/assets/844754a7-7731-45a8-8cc5-97a315d5cd92

#+begin_example
---
toplevel-attributes: {children:slide children:enter="~duration:0"}
---

# Slide 1

Content

---

# Slide 2

Content

---

# Slide 3

You get it
#+end_example

So, why ‚Äú‚Äã/bitter/ joy‚Äù?

I was reluctant to add good support for traditional slide-based presentation. There are already very good and mature solutions for this, including some with similar technical foundations as Slipshow. I was more interested in developping the new things: Slips!

However, Slipshow starts to have useful features that competitor don‚Äôt always have (for instance: a self-contained html output! But more, and more to come). Also, for people who already have slide-based presentations, it makes it easier to migrate them, and use a single tool for old and new presentations!

Finally, I wanted to make Slipshow a bit more versatile and added attributes, frontmatter, and a new options: ~toplevel-attributes~. The proper slide support is actually just a nice consequence of this versatility! ü•≥

Here is the full changelog:

- Fix ~children:~ not working sometimes
- Add ~--toplevel-attributes~ to control the attributes on the toplevel
  container
- Render slide titles as slide titles
- Add arguments to actions
- Add frontmatter 

  You can now do

  #+begin_example
  ---
  theme: vanier
  dimension: 16:9
  css: my_pres.css
  ---
  
  The content here.
  #+end_example

*** OCaml-specific notes on action arguments

In this release, I add the ability to give arguments to actions. For instance, an action can be to focus on a specific element:

#+begin_example
{#my_element}
Some content

{focus="my_element"}
#+end_example

The "positional" arguments is the list of IDs that must be focused. To add other kind of arguments , they need to be named:

#+begin_example
{#my_element}
Some content

{focus="~duration:2 ~margin:5 my_element"}
#+end_example

It was fun to integrate OCaml syntax in slipshow ;) This way, people coming to OCaml after learning slipshow will feel familiar with the syntax!
      

** Paul-Elliot later announced


The Slipshow development intensifies... It is with external pleasure that I announce the [[https://github.com/panglesd/slipshow/releases/tag/v0.5.0][0.5.0]] release of slipshow [[https://github.com/ocaml/opam-repository/pull/28308][on opam]].

Warning: External files have invaded our world! They raise dead formats like PDF into the liveliness of Slipshow presentations!

*** Slipshow 0.5.0: Plan 9 from External Files

As subtly hinted by the title, this slipshow release focuses on the integration of external files in a presentation. Rest assured, a compiled Slipshow presentation stays a standalone HTML file!

In effect, you can now include PDFs, videos and audios files in your presentations! Here is a demo:

https://github.com/user-attachments/assets/bf7d5933-9b29-4e52-ac2a-c4a9a87d9dc6

With the simple source:

#+begin_src md
{#title}
# Plan 9 from External Files

{pause play-media=mp4}
## Video demo

![](plan9.mp4){#mp4 style="width:100%"}

{pause up}

## PDF demo

![](plan9.pdf){#pdf}

{focus=pdf}

{change-page="~n:all pdf"}

{unfocus up=title}
#+end_src

Here is the full changelog:

**** Compiler

- Add support for pdfs
- Add support for audios and videos
- Fix ~enter~ action being added to blockquotes

**** Language

- Add a carousel type and a ~change-page~ action
- Add a ~play-media~ action

**** Engine

- Fix compatibility of slipshow and editable content
- Fix scroll bar appearing in drawing toolbox
      



* Miou, a simple scheduler for OCaml 5
:PROPERTIES:
:CUSTOM_ID: 2
:END:
Archive: https://discuss.ocaml.org/t/ann-miou-a-simple-scheduler-for-ocaml-5/12963/16

** Calascibetta Romain announced


I am pleased to announce the release of [[https://github.com/robur-coop/miou][miou.0.4.0]], the documentation was just updated [[https://docs.osau.re][here]] and the book to learn about Miou is still available [[https://robur-coop.github.io/miou][here]]. This version mainly consolidates our experiments with other libraries, notably: [[https://github.com/mirage/ocaml-dns][~ocaml-dns~]], [[https://github.com/robur-coop/happy-eyeballs][~happy-eyeballs~]], [[https://github.com/mirage/mirage-crypto][~mirage-crypto~]], [[https://github.com/mirleft/ocaml-tls][~ocaml-tls~]], [[https://github.com/robur-coop/httpcats][~httpcats~]], [[https://github.com/robur-coop/carton][~carton~]], [[https://github.com/mirage/colombe][~sendmail~]] and [[https://github.com/paurkedal/ocaml-caqti][~caqti~]].

This consolidation of the API allows us to go further and, in particular, to start offering the [[https://github.com/robur-coop/miou-solo5/blob/main/slides/retreat.md][development of unikernels with OCaml 5]]. To this end, you can follow projects such as [[https://github.com/robur-coop/miou-solo5][miou-solo5]] or [[https://git.robur.coop/robur/chaos][chaos]]. An overview is available [[https://blog.osau.re/articles/last_mirageos_retreat.html][on my blog]] (which presents the latest Mirage retreat in May).

We would also like to continue improving [[https://github.com/robur-coop/vif][Vif]] and [[https://github.com/robur-coop/hurl][Hurl]] ([[https://robur-coop.github.io/vif/][a tutorial]] has just been published on this subject).

Other projects are still in the experimental phase, such as: [[https://github.com/robur-coop/notty-miou][~notty~ / ~nottui~]], [[https://github.com/dinosaure/blaze][~blaze~]], [[https://github.com/dinosaure/multipart_form][~multipart_form~]] or [[https://github.com/mirage/awa-ssh][~awa-ssh~]].

Finally, we would like to thank everyone who has participated directly or indirectly in this project and to its integration into the OCaml ecosystem.

Happy hacking!
      



* Dream development open video call
:PROPERTIES:
:CUSTOM_ID: 3
:END:
Archive: https://discuss.ocaml.org/t/dream-development-open-video-call/17053/6

** Continuing this thread, Anton Bachin announced


For those interested in minutes/notes, providing a brief summary :slight_smile: 

We had a chat about how to maintain Dream as a community, added several people to the repo (master branch is locked for security), and worked through what we can do immediately on several PRs. I showed how I maintain Dream on those PRs, and several others contributed their thoughts and ideas.

At the end we talked off-topic a bit about the future of Dream and bigger projects in it and around it to tackle.

It‚Äôs difficult to write out minutes as it was a lot of detailed talk and work ‚Äì adding specific people, dealing with specific issues. One can see the recent activity in the [[https://github.com/aantron/dream][Dream repo]] to see our guinea pig PRs :slight_smile:
      

** Anton Bachin later added


We‚Äôre going to have the next dev meeting this coming Friday, and weekly thereafter.
      



* Other OCaml News
:PROPERTIES:
:CUSTOM_ID: 4
:END:
** From the ocaml.org blog


Here are links from many OCaml blogs aggregated at [[https://ocaml.org/blog/][the ocaml.org blog]].

- [[https://ocaml.org/events][Upcoming OCaml Events]]
- [[https://patrick.sirref.org/irmin-retro/][Irmin Retrospective]]
      



* Old CWN
:PROPERTIES:
:UNNUMBERED: t
:END:

If you happen to miss a CWN, you can [[mailto:alan.schmitt@polytechnique.org][send me a message]] and I'll mail it to you, or go take a look at [[https://alan.petitepomme.net/cwn/][the archive]] or the [[https://alan.petitepomme.net/cwn/cwn.rss][RSS feed of the archives]].

If you also wish to receive it every week by mail, you may subscribe to the [[https://sympa.inria.fr/sympa/info/caml-list][caml-list]].

#+BEGIN_authorname
[[https://alan.petitepomme.net/][Alan Schmitt]]
#+END_authorname
