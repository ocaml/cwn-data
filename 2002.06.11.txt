Hello,

Here is the latest Caml Weekly News, week 04 to 11 june, 2002. 

1) Signal analysis
2) Cash 0.10
3) Licensing Ocaml under different terms
4) F#
5) findlib-0.7
6) Old cwn

======================================================================
1) Signal analysis
----------------------------------------------------------------------
As related in last week cwn, there was some talk about FFTW bindings for
ocaml. Christophe Troestler added this week:

> 
> Investigate the binding for FFTW library for ocaml.

You can find it at "http://www.umh.ac.be/math/an/software.php".  The
interface is basically finished but it hasn't been thoroughly tested.
Most of the FFTW options are available -- including transforming
several arrays at once.  Do not hesitate to contact me in case of
problems or if you need further help.

======================================================================
2) Cash 0.10
----------------------------------------------------------------------
Bruno Verlyck announced:

I'm pleased to announce the first release (0.10) of Cash, the Caml Shell.

* What is Cash ?

Cash is a Caml implementation of (an as large as possible subset of) the
API of Scsh (0.5.3), the Scheme Shell by Olin Shivers.  It's designed for
writing standalone Unix programs and shell scripts (but rather *not* for
interactive command use). It spans a wide range of application, from
"script" applications usually handled with perl or sh, to more standard
systems applications usually written in C.

* Release 0.10

This is the first public release of Cash.  I see it as beta, but I don't
expect a lot of bugs :-).  For more information, see:
 http://pauillac.inria.fr/cash/
Download the most recently distributed source:
 ftp://ftp.inria.fr/INRIA/Projects/cristal/cash/cash.tar.gz
Stay in sync with latest development / bug fixes (CVS archive):
 http://camlcvs.inria.fr/cgi-bin/cvsweb.cgi/cash/
Documentation:
 http://pauillac.inria.fr/cash/latest/doc/doc.dvi
 http://pauillac.inria.fr/cash/latest/doc/doc.ps
 http://pauillac.inria.fr/cash/latest/doc/index.html

* Bugs

Bug reports, comments, doc typos, and contributions are very welcome:
drop me a mail at Bruno.Verlyck@inria.fr.

======================================================================
3) Licensing Ocaml under different terms
----------------------------------------------------------------------
Blair Zajac asked and Michel Mauny answered:

> Ocaml Developers,
> 
> I am the CEO of OrcaBlue Technologies and I am currently evaluating
> the possibility of developing a suite of libraries and some
> modifications to the Ocaml distribution, such as using the Apache
> Portable Runtime to make porting to various OSes easier, and selling
> and distributing libraries and binaries based on this code.
> 
> I've seen Ocaml developers mention on the Caml mailing lists that  
> Ocaml has been licensed to other groups or individuals under terms
> different than the terms that Ocaml is distributed under and I would
> like to discuss this with the appropriate people.
> 
> As an aside, I come from the opens source world myself, being
> the author the open-source Orca performance monitoring system at
> 
>     http://www.orcaware.com/orca/
> 
> and author of several freely available Perl modules at
> 
>     http://www.cpan.org/modules/by-authors/id/B/BZ/BZAJAC/
> 
> Regards,
> Blair Zajac

Hello,

Yes, it will soon be possible for members of the Caml Consortium (see
http://caml.inria.fr/consortium/) to benefit of a much more flexible
licence than the current public licences for OCaml. Roughly speaking,
the license is a BSD-style licence, and it applies to all OCaml
versions whose public release occurs during the partner membership to
the Caml Consortium.

Please contact me directly for more information.

======================================================================
4) F#
----------------------------------------------------------------------
Vincent Foley remarked:

http://research.microsoft.com/projects/ilx/fsharp.htm

F# is a .NET language based on the core of OCaml.  It can use the .NET
libraries and interact with C#.  What do you guys think?

(There has been many follow ups to this message, you may find the full
thread here: http://caml.inria.fr/archives/200206/msg00069.html ) 

======================================================================
5) findlib-0.7
----------------------------------------------------------------------
Gerd Stolpmann announced:

Hi list,

the new version of findlib (ocamlfind) is now available and can be
downloaded at the usual place:

http://www.ocaml-programming.de/packages/findlib-0.7.tar.gz

The on-line documentation is available here:

http://www.ocaml-programming.de/packages/documentation/findlib/   
http://www.ocaml-programming.de/packages/documentation/findlib/quickstart.html

List of changes:

- DLLs: There are now two styles of installation: DLLs can be
  installed in the package directories (like before), or in a shared
  directory "libexec". For the first style, there is now an option
  "ldconf" that determines whether the ld.conf file is to be updated,
  and if so, which file. The latter style is enabled by simply creating
  a directory "libexec" in the site-lib directory.

- "ocamlfind install" preserves now the mtime of the files.

- "ocamlfind printconf" is more flexible, and easier to call from scripts.

- "ocamlfind browser" calls ocamlbrowser with the right -I options.

- "ocamlfind query": -descendants implies now -recursive.

- "ocamlfind ocamldep": -native-filter and -bytecode-filter for more
  exact dependency generation.

- There may be now postinstall and postremove scripts.

- "ocamlfind pkg/cmd": This syntax can be used to call the program cmd
  that is installed in the package directory for pkg. Intended to
  simplify the invocation of programs that are installed in package
  directories and not in XXX/bin, which may be useful for package-
  related tools.

- Findlib has now a toolbox containing helpful programs besides
  ocamlfind. For the beginning, there is a Makefile wizard that
  can be called by "ocamlfind findlib/make_wizard".

- #use "topfind" instead of #use "findlib" to avoid name clashes
  in a certain configuration. #use "findlib" and #use "ocamlfind"
  are still supported for backward compatibility if the name clash
  does not occur.

- Fix: bytecode threads work again. (The wrong unix library was
  linked for recent O'Caml versions.)

- Many smaller improvements; the docs have been updated.

======================================================================
6) Old cwn
----------------------------------------------------------------------

If you happen to miss a cwn, you can send me a message
(alan.schmitt@inria.fr) and I'll mail it to you. If you also wish to
receive it every week by mail, just tell me so.

======================================================================

Alan Schmitt
