#+OPTIONS: ^:nil
#+OPTIONS: html-postamble:nil
#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+OPTIONS: author:nil
#+HTML_HEAD: <style type="text/css">#table-of-contents h2 { display: none } .title { display: none } .authorname { text-align: right }</style>
#+HTML_HEAD: <style type="text/css">.outline-2 {border-top: 1px solid black;}</style>
#+TITLE: OCaml Weekly News
[[https://alan.petitepomme.net/cwn/2025.01.28.html][Previous Week]] [[https://alan.petitepomme.net/cwn/index.html][Up]] [[https://alan.petitepomme.net/cwn/2025.02.11.html][Next Week]]

Hello

Here is the latest OCaml Weekly News, for the week of January 28 to February 04, 2025.

#+TOC: headlines 1


* Opam repository archive - clarification of the opam fields
:PROPERTIES:
:CUSTOM_ID: 1
:END:
Archive: https://discuss.ocaml.org/t/opam-repository-archive-clarification-of-the-opam-fields/16050/1

** Hannes Mehnert announced


Dear everyone,

we had further discussions about the semantics of ~x-maintenance-intent~, and hope to clarify in this post. Also, we adapted the policy which is in the opam-repository git repository: https://github.com/ocaml/opam-repository/blob/master/governance/policies/archiving.md

*** x-maintenance-intent

We've had some further discussions on Phase 3 and the semantics of the ~x-maintenance-intent~ field.

**** Goal

Our aim is to be not disruptive for the common OCaml programmer or user. The opam-repository supports (from February 1st on) OCaml 4.08 and greater. This means that if you install OCaml 4.08 you should be able to install all the packages that have ever been released with 4.08 support.

The revised semantics of "(latest)" is "the latest version of this package, so that every supported OCaml version will have an installation candidate".

***** Example

Let me give you an example, consider the package "basic" which exists in three versions:
- basic.1.0.0 with the dependency "ocaml" {>= "4.05" & < "5"}
- basic.1.0.1 with the dependency "ocaml" {>= "4.08" & < "5"}
- basic.2.0.0 with the dependency "ocaml" {>= "4.14" & < "5"}

Here, if the ~x-maintenance-intent: [ "(latest)" ]~ is present, we will only (try to) archive basic.1.0.0 -- since 1.0.1 is needed for OCaml 4.08 .. 4.13.

**** Default value

The default value of ~x-maintenance-intent~ will for now be ~"(any)"~ - so all versions are kept. In the future, we may change this default to ~"(latest)"~, but will announce this ahead of the change with plenty of time.

This default value is agreed on by the non-disruptive agreement to cause the least trouble.

*** x-maintained

In addition to the ~x-maintenance-intent~ - which covers the semantics of all versions of an opam package, we support another field, ~x-maintained: BOOL~. This is an overwrite for a specific opam package version, and allows to declare whether it is maintained or not.

It is useful in the setting where you've lots of pre-releases that are no longer maintained and you like to state this without writing a global intent for the opam package (e.g. for the OCaml compiler packages, the alpha, beta, and rc versions). Here, ~x-maintained: false~ is a nice setting. NB: earlier we proposed ~flags: deprecated~ - but we stay away from the flags, since there may be packages that are deprecated but still maintained (opam prints a warning if you install a package with the deprecated flag).

If you have a private project and depend on a specific version of an opam package, you can as well PR the ~x-maintained: true~ field for that opam file (please specify when, who, and why). This will ensure that this opam file stays in the opam repository.

*** Phase 3

In Phase 3, we will consider all packages marked with ~x-maintenance-intent~ (the versions not matching the intent) and ~x-maintained: false~ to be archived.

We plan to ensure that (a) all supported OCaml versions will retain an installation candidate (b) all reverse dependencies will still be installable. As a note, if you have an availability condition (some version will only work on some OS), we won't take that into consideration -- you will need to specify the ~x-maintenance-intent~ to cover your versions.

Our plan is to publish the list of packages to be archived by February 15th on this discourse. It is likely we'll have candidate lists PRed to the [[https://github.com/ocaml/opam-repository-archive][opam-repository-archive]] earlier. We have lots of ideas and plans for CI systems to give feedback which opam versions are falling into the maintenance intent when you open a PR to the opam-repository (but we're not there yet).

*** Future

As noted above, the default value of ~x-maintenance-intent~ may change in time. If this is decided, we will announce this with plenty of time before.

Also, at some point in the future we will bump the OCaml lower bound (from February 1st it is 4.08).

*** Action

For the smooth shrinking of the opam-repository, please don't hesitate to fill in your x-maintenance-intent (especially "(none)" and "(latest)" are fine and safe choices).

If you want to contribute more, the opam-repository needs help for triaging and merging PRs - why not become a maintainer? See the old but still valid [[https://discuss.ocaml.org/t/call-for-new-opam-repository-maintainers/12041]['call for new opam-repository maintainers']] if you're interested.
      



* Chúc mừng năm mới Ất Tỵ 2025!
:PROPERTIES:
:CUSTOM_ID: 2
:END:
Archive: https://discuss.ocaml.org/t/chuc-m-ng-nam-m-i-t-t-2025/16055/1

** sanette announced


Happy Vietnamese (and Chinese too) New Year!

It's the year of the snake, no its has nothing to do with ~python~, but why not play [[https://github.com/sanette/snoke][Snóke]]  ;)

Happy OCaml snaky year to all

#+attr_html: :width 80%
https://us1.discourse-cdn.com/flex020/uploads/ocaml/optimized/2X/7/724ead058962d131571f612fa8939f1847758c7e_2_1146x1000.png
      



* Rewriting Slipshow in OCaml: The undo-able monad
:PROPERTIES:
:CUSTOM_ID: 3
:END:
Archive: https://discuss.ocaml.org/t/blog-rewriting-slipshow-in-ocaml-the-undo-able-monad/16069/1

** Paul-Elliot announced


Hello OCamlers,

I have recently rewritten [[https://github.com/panglesd/slipshow/][Slipshow]]'s engine from JavaScript to OCaml.
It turns out this rewriting was very satisfying, and many niceties came out of it.
I have written a blog post about a specifically interesting one: the use of custom ~let~ operators with the "undo-able" monad. I hope you enjoy the read!

The blog post: [[https://choum.net/panglesd/undo-monad/][How I fixed Slipshow's worst flaw using OCaml and a monad]].
      



* Announcing climate.0.4.0
:PROPERTIES:
:CUSTOM_ID: 4
:END:
Archive: https://discuss.ocaml.org/t/announcing-climate-0-4-0/16084/1

** Steve Sherratt announced


[[https://github.com/gridbugs/climate][Climate]] is a declarative command-line parser for OCaml. This release is mostly focused on improving ~--help~ messages and allowing the colours of help messages to be configured.

*** Added

- Allow help messages colours to be configured ([[https://github.com/gridbugs/climate/pull/7][#7]])
- Proof of concept of manpage generation (disabled in release as it's very incomplete) ([[https://github.com/gridbugs/climate/pull/11][#11]])

*** Changed

- Changed default help message colour scheme to be more colour-blind readable
and more visible on light and dark terminals ([[https://github.com/gridbugs/climate/pull/7][#7]])
- Changed description of ~--help~ argument.

*** Fixes

- Remove superfluous style reset escape sequences ([[https://github.com/gridbugs/climate/pull/7][#7]])
- Don't apply formatting to trailing spaces in argument names in help messages ([[https://github.com/gridbugs/climate/pull/8][#8]])
- Print a readable error when the argument spec is invalid ([[https://github.com/gridbugs/climate/pull/10][#10]])
      



* 15th MirageOS retreat May 13th - 20th
:PROPERTIES:
:CUSTOM_ID: 5
:END:
Archive: https://discuss.ocaml.org/t/ann-15th-mirageos-retreat-may-13th-20th/16085/1

** Hannes Mehnert announced


Dear everybody,

we'll have another MirageOS retreat in May 2025 (13th - 20th). Happy to see lots of old and new faces there.

Please jump to https://retreat.mirageos.org for further details, and sign up and spread the word :)

Don't hesitate to ask questions in this topic.
      



* Dune dev meeting
:PROPERTIES:
:CUSTOM_ID: 6
:END:
Archive: https://discuss.ocaml.org/t/ann-dune-dev-meeting/14994/22

** Etienne Marais announced


Hi Dune enthusiasts :smile:,

We will hold the regular Dune Dev Meeting on **Wednesday, February, 5th at 9:00** CET. As usual, the session will be one hour long.

Whether you are a maintainer, a regular contributor, a new joiner or just curious, you are welcome to join: these discussions are opened! The goal of these meetings is to provide a place to discuss the ongoing work together and synchronize with the Dune developers! :ok_hand: 

*** :calendar: Agenda

The agenda is available on the[[https://github.com/ocaml/dune/wiki/dev-meeting-2025-02-05][ meeting dedicated page]]. Feel free to ask if you want to add more items in it.

*** :computer: Links

- Meeting link:[[https://us06web.zoom.us/j/85096877776?pwd=cWNhU1dHQ1ZNSjZuOUZCQ0h2by9Udz09][ zoom]]
- Calendar event:[[https://calendar.google.com/calendar/embed?src=c_5cd698df6784e385b1cdcdc1dbca18c061faa96959a04781566d304dc9ec7319%40group.calendar.google.com][ google calendar]]
- Wiki with information and previous notes:[[https://github.com/ocaml/dune/wiki#dev-meetings][ GitHub Wiki]]
      



* Other OCaml News
:PROPERTIES:
:CUSTOM_ID: 7
:END:
** From the ocaml.org blog


Here are links from many OCaml blogs aggregated at [[https://ocaml.org/blog/][the ocaml.org blog]].

- [[https://blog.janestreet.com/how-we-accidentally-built-a-better-build-system-for-ocaml-index/][How we accidentally built a better build system for OCaml]]
- [[https://tarides.com/blog/2025-01-20-tarides-2024-in-review][Tarides: 2024 in Review]]
      



* Old CWN
:PROPERTIES:
:UNNUMBERED: t
:END:

If you happen to miss a CWN, you can [[mailto:alan.schmitt@polytechnique.org][send me a message]] and I'll mail it to you, or go take a look at [[https://alan.petitepomme.net/cwn/][the archive]] or the [[https://alan.petitepomme.net/cwn/cwn.rss][RSS feed of the archives]].

If you also wish to receive it every week by mail, you may subscribe to the [[https://sympa.inria.fr/sympa/info/caml-list][caml-list]].

#+BEGIN_authorname
[[https://alan.petitepomme.net/][Alan Schmitt]]
#+END_authorname
