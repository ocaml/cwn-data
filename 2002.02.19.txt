Hello,

Here is the latest Caml Weekly News, week 12 to 19 february, 2002. 

Summary:
1) Caml Light Heavy
2) a question on packaging
3) Major release of Active-DVI
4) mlgmp, new release
5) WDialog now available under GPL

======================================================================
1) Caml Light Heavy
----------------------------------------------------------------------
Daniel de Rauglaudre announced:

Hi all,

I have the pleasure to announce the first release of ocamlcl.

Ocamlcl is OCaml with the syntax of Caml Light, using Camlp4.
Completely unuseful, except if you absolutely need Caml Light
for teaching or learning, things like that.

Provides:

  1/ a toplevel "ocamlcl"
  2/ a library "libcl.cmo" (probably still incomplete)
  3/ a Camlp4 syntax "pa_cl.cmo".

Download here:
  ftp://ftp.inria.fr/INRIA/Projects/cristal/Daniel.de_Rauglaudre/ocamlcl/

Release number is 0.1

---
Then he added:

New release 0.2 of ocamlcl including the compilation in native code
of its library libcl.

Home page and distribution:
        http://cristal.inria.fr/~ddr/ocamlcl/

---
Later on ...:

ocamlcl version 0.3 has been released:

- Added miscellaneous missing cases and functions...
- Added commands ocamlclc and ocamlclopt
- Added #infix and #uninfix.

  Ocamlcl is Caml Light syntax under OCaml/Camlp4. You can run your Caml
  Light programs with the power of OCaml. The distribution comes with a
  toplevel "ocamlcl", and since this version, the standalone bytecode
  and native compilers: "ocamlclc" and "ocamlclopt" (actually just shell
  scripts calling what is necessary).

Home page:
  http://cristal.inria.fr/~ddr/ocamlcl/

======================================================================
2) a question on packaging
----------------------------------------------------------------------
Doug Bagley announced:

I would like to offer a small module I've written for benchmarking.
But I also have some questions, since I've never done this before.
A compressed tarball is here:

 http://www.bagley.org/~doug/ocaml/benchmark/

This module is a fairly straight-forward port of the Perl Benchmark
module, which allows you to measure and compare the run-time of
functions.  There is some ocamldoc style documentation included.

I have seen some other packages use autoconf, or custom makefiles,
sometimes with findlib (which I haven't really explored yet). Some
modules seem to install in /usr/local/lib/ocaml and some in +contrib.

I took the route of using Markus' fine OcamlMakefile, extending it with
some extra stuff for what I need. So, for example, it will install in
/usr/local/lib/ocaml/contrib by default, but you can override that by
defining an environment variable, as I briefly explain in the INSTALL
file. I honestly have no idea if what I've done will work on Windows, I
don't have an easy way of finding out right now.

Do people think that strategy is sufficient? Is there a best way to
package up a module for distribution? Would others like to see OCaml
offer a standard method of packaging, distributing, and building
modules? (It's becoming quite popular to offer this, for example,
Perl and Xemacs offer standard packaging systems). I believe I saw
one or more messages in the archives on this subject, so maybe it's
not just me.

Anyway, I would appreciate any feedback, whether it's about the
benchmark module, or issues of packaging a module. Thanks.

======================================================================
3) Major release of Active-DVI
----------------------------------------------------------------------
Pierre Weis announced:

Hi,

This is the official announcement of the long time delayed new version
of Active-DVI.

      Active-DVI is a presenter and previewer for texts or slides
      written in LaTeX, hence the presentation tool of choice for the
      discriminating hacker.

Although this version has no known bugs at all, it is still for brave
souls, since the installation is not yet fully automatic (see
below). However, we daily use this version of Active-DVI for
presentations: once installed, the software is easy to use and
reliable.

We hope you will adopt Active-DVI and participate to the development 
efforts by providing some nice example presentations or templates for
regular slides presentation LaTeX packages, may be some new LaTeX
macro set, or even some fancy effects Caml module of your own, ready   
to incorporate into Active-DVI.

Enjoy!

For the Active-DVI development team, 15th february 2002,

Jun Furuse (Jun.Furuse@inria.fr) & Pierre Weis (Pierre.Weis@inria.fr)



                       Active-DVI



Version 1.0 is now available. As the release number shows, this is a
major improvement w.r.t version 0.4 of Active-DVI.

This new version has been developed by Jun Furuse, Didier Rémy and
Pierre Weis with also contributions by Didier Le Botlan, Roberto Di
Cosmo, Xavier Leroy, and Alan Schmitt.

In addition to the regular features of the Active-DVI previewer:

   * Encapsulated Postscript File inclusion
     (using the graphics LaTeX package)

   * Some effects for presentation (pause, delay, text color change)

this release introduces a lot of new features

   * Interactive demos, via launching of applications from within the slides

   * Background colors and background images for slides

   * Annotations of texts (visible when the mouse is on the annotated text)

   * Hyper references from slide to slide or to other dvi files

   * Animated transitions from slide to slide

   * Text movements within the slide

   * Recording of text and arbitrary playback of recorded elements

   * Superposition effects for included images (alpha channels and blending)

   * A manual

   * A lot of examples, including talks using populat LaTeX packages seminar
     and prosper.

   * New package xprosper.sty, an extended version of the prosper package from
     http://prosper.sourceforge.net/.

   * A new user's interface in the redesigned LaTeX package advi.sty.

Play advi on the demonstration presentation demo.dvi that is in the test
directory of the distribution. Look at source code of various talks in
the directory ``examples''.

The source code, RPM packages, and information are available at

    http://pauillac.inria.fr/advi/

       PLEASE NOTE THAT RPM PACKAGES ARE NOT YET BULLET PROOF.
       PLEASE, DO USE THE SOURCE CODE TO BUILD THE SOFTWARE
                  SORRY FOR THE INCONVENIENCE

You can join the Active-DVI mailing list by droping a mail to
advi-list-request@pauillac.inria.fr

Bug reports can be sent to advi-bugs@pauillac.inria.fr

Contributions and comments are warmly welcome.

======================================================================
4) mlgmp, new release
----------------------------------------------------------------------
David Monniaux announced:

mlgmp is an interface between GNU MP (multiprecision computations on
integers, rationals and floating-point numbers) and O'Caml.

New release:
http://www.di.ens.fr/~monniaux/download/mlgmp-20020216.tar.gz

======================================================================
5) WDialog now available under GPL
----------------------------------------------------------------------
Gerd Stolpmann announced:

Hello list,

WDialog is a framework to develop web application in O'Caml. We have
used it in two commercial projects, and finally decided to make it
available to everybody under the conditions of the GPL.

WDialog separates the visualization of web applications from the
program logic; the first is described in an XML file, and the latter
is an ordinary O'Caml program using the WDialog library. WDialog
includes a way to pass the micro state of the current dialog from
one server activation to the next. Last but not least, WDialog also
has a template system to build complex HTML pages from components.

There are also Perl bindings for people who don't like modern
languages.

WDialog is now a Sourceforge project. The homepage with all
relevant links is:

http://wdialog.sourceforge.net

The latest version can be found in the CVS repository. I have recently
made a test release tarball (should be close to the next regular release, so
check it out).

You need a lot of libraries as prerequisites to build WDialog, so it
is better you reserve several hours for the build process.

There are two mailing lists: wdialog-users for programmers who want
to use it, and wdialog-devel for people who want to help us improving
the library.

There is an online manual at wdialog.sourceforge.net, including an
introduction, and a simple example.

We hope you find WDialog as useful as we do.

======================================================================

Alan Schmitt
