<?xml version="1.0" encoding="utf-8"?>
<cwn>
  <cwn_head>
    <cwn_date>2021.10.19</cwn_date>
    <cwn_prev>2021.10.12</cwn_prev>
    <cwn_next>2021.10.26</cwn_next>
    <cwn_date_text>October 12 to 19, 2021</cwn_date_text>
    <cwn_extra_head></cwn_extra_head>
  </cwn_head>
  <cwn_body>
    <cwn_entry>
      <cwn_title>Verification for Dummies: SMT and Induction</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/verification-for-dummies-smt-and-induction/8631/1</cwn_url>
      <cwn_who>OCamlPro announced</cwn_who>
      <cwn_what>
We are pleased to share with you [Verification for Dummies: SMT and
Induction](https://www.ocamlpro.com/2021/10/14/verification-for-dummies-smt-and-induction/), a complete and detailed
series of blogposts written by Adrien Champion about Induction as a formal verification technique.

The subject is treated with many concrete and executable examples. All examples can be (and should be) launched
locally by readers thanks to small and easy to find tools. Modification and experimentation are strongly encouraged!

Take a look at all the notions covered:

- introduction to formal logics and formal frameworks;
- SMT-solving: modern, low-level verification building blocks;
- declarative transition systems;
- transition system unrolling;
- BMC and induction proofs over transition systems;
- candidate strengthening.

We hope you enjoy reading and we look forward to your feedback!
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>OCaml Café: Wed, Oct 13 @ 1pm (U.S. Central)</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ocaml-cafe-wed-oct-13-1pm-u-s-central/8610/14</cwn_url>
      <cwn_who>Claude Jager-Rubinson announced</cwn_who>
      <cwn_what>
The video of @dra27's talk on OPAM is now available: https://youtu.be/RHSdlH4el0g. Thanks so much for the great talk,
David!  And thanks to everybody who attended!  (The video starts a couple of minutes into the talk because yours
truly forgot to start recording.  D'oh!)

We already have some ideas for the next meeting but if there's a topic that you'd like to hear about or are
interested on presenting on, please message me.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Windows-friendly OCaml 4.12 distribution 2nd preview release (0.2.0)</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-windows-friendly-ocaml-4-12-distribution-2nd-preview-release-0-2-0/8488/3</cwn_url>
      <cwn_who>jbeckford announced</cwn_who>
      <cwn_what>
0.2.5 is available. This release brings significant user friendly improvements.

There is a new binary called ~with-dkml.exe~. Just plop ~with-dkml~ in front of a Windows command that requires
access to Unix scripts (ie. ~with-dkml opam install~) and it should just work.

There is now a section called **Beyond Basics** in [the Diskuv OCaml user
documentation](https://diskuv.gitlab.io/diskuv-ocaml/index.html) that walks through:
- the first and second tutorials of [Getting Started - Learn OCaml](https://ocaml.org/learn/tutorials/)
- the bare Opam essentials you need as a beginner (how to find and select an Opam switch, and how to find and install packages using ~with-dkml opam install~), all without leaving the Command Prompt
- installing Visual Studio Code with the OCaml plugin

Huge thanks to @Butanium who lent me much of his time to validate usability from the perspective of a newcomer. More
feedback is always welcome.

Links:
- [Installation instructions for the latest version](https://diskuv.gitlab.io/diskuv-ocaml/index.html#two-step-installation-instructions)
- [Release notes for all versions](https://gitlab.com/diskuv/diskuv-ocaml/-/releases)

PS. You won't need ~with-dkml~ most of the time. The Beyond Basics documentation shows how to run Dune and the OCaml
native compiler directly from the Visual Studio Command Prompt.
      </cwn_what>
    </cwn_entry>
    <cwn_entry>
      <cwn_title>Release of ocaml-sf/learn-ocaml:0.13.0</cwn_title>
      <cwn_url>https://discuss.ocaml.org/t/ann-release-of-ocaml-sf-learn-ocaml-0-13-0/8577/6</cwn_url>
      <cwn_who>Erik Martin-Dorel announced</cwn_who>
      <cwn_what>
Just FYI, a bugfix release learn-ocaml ~0.13.1~ has just been tagged and:

- [released in GitHub](https://github.com/ocaml-sf/learn-ocaml/releases/tag/v0.13.1) ← see the Release Notes and binaries-assets
- [pushed to Docker Hub](https://hub.docker.com/r/ocamlsf/learn-ocaml/tags) ← ~ocamlsf/learn-ocaml~ being the official distribution of Learn-OCaml
- [submitted to OPAM default repository](https://github.com/ocaml/opam-repository/pull/19787)
      </cwn_what>
    </cwn_entry>
  </cwn_body>
</cwn>
